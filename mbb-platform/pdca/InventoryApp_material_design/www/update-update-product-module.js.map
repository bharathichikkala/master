{"version":3,"sources":["webpack:///./src/app/+product-management/update/update-product.component.css","webpack:///./src/app/+product-management/update/update-product.component.html","webpack:///./src/app/+product-management/update/update-product.component.ts","webpack:///./src/app/+product-management/update/update-product.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,6CAA6C,yBAAyB,OAAO,kBAAkB,qBAAqB,OAAO,mBAAmB,2CAA2C,sBAAsB,kBAAkB,mBAAmB,aAAa,cAAc,yBAAyB,GAAG,cAAc,uBAAuB,aAAa,cAAc,GAAG,kBAAkB,6BAA6B,eAAe,iBAAiB,uBAAuB,uDAAuD,uDAAuD,GAAG,+BAA+B,8BAA8B,+BAA+B,+BAA+B,GAAG,+BAA+B,8BAA8B,mCAAmC,mCAAmC,GAAG,+BAA+B,8BAA8B,kCAAkC,kCAAkC,GAAG,+BAA+B,8BAA8B,kCAAkC,kCAAkC,GAAG,gCAAgC,QAAQ,kCAAkC,kCAAkC,KAAK,SAAS,uCAAuC,uCAAuC,KAAK,SAAS,kCAAkC,kCAAkC,KAAK,GAAG,wBAAwB,QAAQ,kCAAkC,kCAAkC,KAAK,SAAS,uCAAuC,uCAAuC,KAAK,SAAS,kCAAkC,kCAAkC,KAAK,GAAG,C;;;;;;;;;;;ACA7oD,mnGAAmnG,eAAe,66CAA66C,cAAc,63BAA63B,+BAA+B,syBAAsyB,8BAA8B,urBAAurB,mBAAmB,q1BAAq1B,iBAAiB,8uBAA8uB,6DAA6D,mDAAmD,oDAAoD,2EAA2E,03FAA03F,eAAe,6xBAA6xB,8BAA8B,ouBAAouB,mBAAmB,02BAA02B,iBAAiB,mpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9ic;AACT;AACM;AACmD;AACjE;AACa;AAC+B;AAS7E;IAkBI,gCAA6B,EAAe,EACvB,MAAc,EACxB,UAAsB,EACZ,UAAyB,EACnC,MAAiB;QAJC,OAAE,GAAF,EAAE,CAAa;QACvB,WAAM,GAAN,MAAM,CAAQ;QACxB,eAAU,GAAV,UAAU,CAAY;QACZ,eAAU,GAAV,UAAU,CAAe;QACnC,WAAM,GAAN,MAAM,CAAW;QAnB5B,YAAO,GAAC,KAAK,CAAC;QAad,qBAAgB,GAAQ,EAAE;QAC1B,uBAAkB,GAAG,IAAI,IAAI,EAAE;IAQ/B,CAAC;IAWD,yCAAQ,GAAR;QACI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACvD;;OAED;QACC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,UAAU,GAAG,UAAC,KAAK;YACtB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QAEF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,oBAAoB,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAC3C,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACvC,YAAY,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACxE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC5D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,sBAAsB,CAAC,CAAC;QAC9E,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC9D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC;QACrD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC;QAC7D,IAAM,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IACxC,CAAC;IAED,qDAAoB,GAApB,UAAqB,IAAI;QAAzB,iBAuBC;QAtBG,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;YAC5D,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gBACnB,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,KAAI,CAAC,GAAG,CAAC,EAAE,EAAE;oBACxC,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC;oBAClC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO;oBAC5D,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW;oBAChE,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;oBAC3C,KAAI,CAAC,gBAAgB,CAAC,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;oBACrF,KAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;oBAChE,KAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;oBAC3D,KAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE;oBACtB,KAAI,CAAC,iBAAiB,EAAE;oBACxB,KAAI,CAAC,0BAA0B,EAAE,CAAC;oBAClC,KAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,KAAI,CAAC,eAAe,EAAE,CAAC;iBAC1B;qBAAM;oBACF,KAAI,CAAC,UAAU,CAAC,sCAAsC,CAAC;iBAC3D;aACJ;iBAAM;gBACH,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aACtC;QACL,CAAC,CAAC;IACN,CAAC;IACD,kDAAiB,GAAjB;QAAA,iBASC;QARG,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC3C,IAAM,WAAW,GAAQ,IAAI,CAAC;YAC9B,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE;gBAC1B,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC;gBACvC,iHAAiH;gBACjH,KAAI,CAAC,gBAAgB,CAAC,UAAU,GAAG,KAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;aACxD;QACL,CAAC,CAAC;IACN,CAAC;IACD,gDAAe,GAAf;QAAA,iBAOC;QANG,IAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC7C,IAAM,SAAS,GAAQ,IAAI,CAAC;YAC5B,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE;gBACxB,KAAI,CAAC,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC;aACvC;QACL,CAAC,CAAC;IACN,CAAC;IAED,oDAAmB,GAAnB;QAAA,iBAOC;QANG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,gBAAM;YACrC,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,IAAI,CAAC,KAAI,CAAC,YAAY,CAAC,SAAS,EAAE;gBAC9B,KAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,IAAI;aAC9D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2DAA0B,GAA1B;QAAA,iBAeC;QAdG,IAAI,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,cAAI;YACpD,IAAM,OAAO,GAAQ,IAAI,CAAC;YAC1B,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE;gBACtB,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC;gBACnC,IAAM,OAAO,GAAQ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAA3D,CAA2D,CAAC;gBACpH,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC;gBAC1C,IAAI,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;oBAC9B,KAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;wBACvF,IAAM,OAAO,GAAQ,IAAI,CAAC;wBAC1B,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;oBACnC,CAAC,CAAC;iBACL;aACJ;QACL,CAAC,CAAC;IACN,CAAC;IACD,gDAAe,GAAf;QAAA,iBASC;QAPG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACvF,IAAM,OAAO,GAAQ,IAAI,CAAC;gBAC1B,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;YACnC,CAAC,CAAC;SACL;QACD,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,EAAE;IACrC,CAAC;IACD,wDAAuB,GAAvB;QAAA,iBAUC;QARG,IAAI,CAAC,UAAU,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,cAAI;YACrD,IAAM,SAAS,GAAQ,IAAI,CAAC;YAC5B,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE;gBACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;gBACjC,IAAM,SAAS,GAAQ,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAnD,CAAmD,CAAC;gBAC1G,KAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE;aAC9C;QACL,CAAC,CAAC;IACN,CAAC;IAID,2CAAU,GAAV;QAAA,iBAkEC;QAjEG,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,IAAI,IAAI,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;SACrD;QACD,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC;YAClB,IAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;YAC7B,qFAAqF;YACrF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAA1C,CAA0C,CAAC;YAC1E,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAA1C,CAA0C,CAAC;YAE9E,IAAM,OAAO,GAAQ,EAAE;YACvB,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;YACpB,OAAO,CAAC,UAAU,GAAG;gBACjB,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;gBACjB,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY;gBACrC,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ;aAChC;YACD,0GAA0G;YAC1G,OAAO,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAA1C,CAA0C,CAAC;YAC7G,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAA1C,CAA0C,CAAC;YACjG,OAAO,CAAC,WAAW,GAAG;gBAClB,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,SAAS,EAAE,IAAI;gBACf,WAAW,EAAE,CAAC;gBACd,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO;gBACpD,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,WAAW;gBAC5D,aAAa,EAAE,mCAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE;gBACzC,aAAa,EAAE,IAAI;gBACnB,cAAc,EAAE,IAAI;gBACpB,kBAAkB,EAAE,CAAC;gBACrB,qBAAqB,EAAE,IAAI;gBAC3B,gBAAgB,EAAE,IAAI;gBACtB,eAAe,EAAE,IAAI;gBACrB,sBAAsB,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAA1C,CAA0C,CAAC;aAEzG;YACD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,mBAAmB,KAAK,KAAI,CAAC,gBAAgB,CAAC,mBAAmB,EAAxE,CAAwE,CAAC;YAEhI,OAAO,CAAC,YAAY,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAM,IAAI,aAAM,CAAC,EAAE,KAAK,KAAI,CAAC,gBAAgB,CAAC,MAAM,EAA1C,CAA0C,CAAC;YAC1H,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;YAChD,OAAO,CAAC,UAAU,GAAG;gBACjB,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,eAAe;aAC9C;YACD,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;YAC5B,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACvD,OAAO,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACvD,OAAO,CAAC,WAAW,GAAG,mCAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;YACjD,OAAO,CAAC,WAAW,GAAG,mCAAM,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;YAEjD,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE;gBACpC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY;aAC5D;YACD,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBAC5D,KAAI,CAAC,OAAO,GAAC,KAAK,CAAC;gBACnB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,EAAE;oBACpB,KAAI,CAAC,UAAU,CAAC,8BAA8B,CAAC;iBAClD;qBAAM;oBACH,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBAC5C;YACL,CAAC,CAAC;SACL;aACI;YACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC5B;IACL,CAAC;IAED,2CAAU,GAAV,UAAW,IAAI;QAAf,iBAQC;QAPG,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;QACjC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpC,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;aACxC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACD,gDAAe,GAAf,UAAgB,IAAI;QAChB,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;QACjC,gDAAgD;QAChD,yDAAyD;QACzD,yBAAyB;QACzB,iCAAiC;QACjC,gBAAgB;QAChB,MAAM;IACV,CAAC;IAED,6CAAY,GAAZ;QAAA,iBAKC;QAJG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,UAAU,CAAC;YACP,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IA5PQ,sBAAsB;QANlC,+DAAS,CAAC;YACP,QAAQ,EAAE,kBAAkB;;;SAG/B,CAAC;yCAoBmC,0DAAW;YACf,sDAAM;YACZ,uDAAU;YACA,oFAAa;YAC3B,2DAAS;OAtBnB,sBAAsB,CA8PlC;IAAD,6BAAC;CAAA;AA9PkC;AAgRnC;IAAA;IAKA,CAAC;IAHG,kCAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAJQ,eAAe;QAhB3B,+DAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;YACzC,QAAQ,EAAE,2kBAYX;SACF,CAAC;OACW,eAAe,CAK3B;IAAD,sBAAC;CAAA;AAL2B;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/Ra;AACM;AACQ;AACW;AACmB;AAa1D;AAE3B,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gFAAsB;KACpC;CACJ;AAwBD;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QArB/B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,+DAAa;gBACb,iEAAe;gBACf,iEAAe;gBACf,oEAAkB;gBAClB,gEAAc;gBACd,kEAAgB;gBAChB,iEAAe;gBACf,iEAAe;gBACf,4DAAY;gBACZ,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC/B,0DAAW;gBACX,kEAAmB,CAAC,UAAU,CAAC,EAAE,4BAA4B,EAAE,OAAO,EAAE,CAAC;aAC5E;YACD,YAAY,EAAE,CAAC,gFAAsB,EAAE,yEAAe,CAAC;YACvD,SAAS,EAAE,EAEV;YACD,eAAe,EAAE,CAAC,yEAAe,CAAC;SACrC,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ","file":"update-update-product-module.js","sourcesContent":["module.exports = \".mat-focused .placeholder {    \\n    color: #AAAAAA;\\n    }\\n  .placeholder {\\n     color:#AAAAAA;\\n    }\\n  .ui-overlay-c {\\n    background-color: rgba(0, 0, 0, 0.5);\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    text-align: center;\\n}\\n  .loading {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n  .loading-bar {\\n \\n  display: inline-block;\\n  width: 4px;\\n  height: 18px;\\n  border-radius: 4px;\\n  -webkit-animation: loading 1s ease-in-out infinite;\\n          animation: loading 1s ease-in-out infinite;\\n}\\n  .loading-bar:nth-child(1) {\\n  background-color: #3498db;\\n  -webkit-animation-delay: 0;\\n          animation-delay: 0;\\n}\\n  .loading-bar:nth-child(2) {\\n  background-color: #c0392b;\\n  -webkit-animation-delay: 0.09s;\\n          animation-delay: 0.09s;\\n}\\n  .loading-bar:nth-child(3) {\\n  background-color: #f1c40f;\\n  -webkit-animation-delay: .18s;\\n          animation-delay: .18s;\\n}\\n  .loading-bar:nth-child(4) {\\n  background-color: #27ae60;\\n  -webkit-animation-delay: .27s;\\n          animation-delay: .27s;\\n}\\n  @-webkit-keyframes loading {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n  20% {\\n    -webkit-transform: scale(1, 2.2);\\n            transform: scale(1, 2.2);\\n  }\\n  40% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n}\\n  @keyframes loading {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n  20% {\\n    -webkit-transform: scale(1, 2.2);\\n            transform: scale(1, 2.2);\\n  }\\n  40% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Update Inventory</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n\\n                        <form [formGroup]=\\\"complexForm\\\" method=\\\"post\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"QR Code\\\" formControlName=\\\"barcode\\\" [(ngModel)]=\\\"updateProductObj.barcode\\\" readonly type=\\\"text\\\">\\n                                    </mat-form-field>\\n\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"SKU Code\\\" formControlName=\\\"skuCode\\\" [(ngModel)]=\\\"skuCodedata\\\" readonly type=\\\"text\\\">\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"Product Name\\\" type=\\\"text\\\" formControlName=\\\"productName\\\" [(ngModel)]=\\\"ProductName\\\" readonly>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"P.O Number\\\" type=\\\"text\\\" formControlName=\\\"povendor\\\" [(ngModel)]=\\\"updateProductObj.purchaseOrderNumber\\\"\\n                                            readonly>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <!-- <label>Facility</label> -->\\n                                        <input matInput placeholder=\\\"Facility\\\" type=\\\"text\\\" formControlName=\\\"facility\\\" [(ngModel)]=\\\"updateProductObj.facilityId\\\"\\n                                        readonly>\\n                                        <!-- <mat-select  matInput disabled formControlName=\\\"facility\\\" [(ngModel)]=\\\"updateProductObj.facilityId\\\" required>\\n                                            <mat-option *ngFor=\\\"let item of facilitiesList\\\" [value]=\\\"item.id\\\">{{item.facility}}</mat-option>\\n                                        </mat-select> -->\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\" *ngIf=\\\"this.updateProductObj.serialNumber !=null\\\">\\n                                <div class=\\\"col-sm-10 col-10\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput type=\\\"text\\\" name=\\\"serialNumber\\\" formControlName=\\\"serialNumber\\\" [(ngModel)]=\\\"updateProductObj.serialNumber\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Serial Number</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"complexForm.controls['serialNumber'].hasError('required') && formValidate \\\" class=\\\"text-danger\\\">Please\\n                                        enter Serial Number\\n                                    </span>\\n                                    <span *ngIf=\\\"complexForm.controls['serialNumber'].hasError('maxlength') \\\" class=\\\"text-danger\\\">Please\\n                                        enter maxlength should be 32 chars\\n                                    </span>\\n                                    <span *ngIf=\\\"errorMessage\\\" class=\\\"text-danger\\\">\\n                                       {{errorMessage}}\\n                                    </span>\\n                                </div>\\n                                <div class=\\\"col-sm-2 col-2\\\" (click)=\\\"getInvoiceBybarcode()\\\" style=\\\"margin: auto\\\"><img src=\\\"assets/img/qr-code.png\\\">\\n                                </div>\\n                            </div>\\n                            <!--<div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Vendors</label>\\n                                        <mat-select matInput formControlName=\\\"povendor\\\" [(ngModel)]=\\\"updateProductObj.purchaseOrderNumber\\\" \\n                                            required>\\n                                            <mat-option *ngFor=\\\"let condition of poVendorsList\\\" [value]=\\\"condition.purchaseOrderNumber\\\" >{{condition.purchaseOrderNumber}}</mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>-->\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Product Condition</label>\\n                                        <mat-select matInput formControlName=\\\"inventoryConditionId\\\" [(ngModel)]=\\\"updateProductObj.condId\\\" (selectionChange)=\\\"getStatusChange()\\\"\\n                                            required>\\n                                            <mat-option *ngFor=\\\"let condition of conditionsList\\\" [value]=\\\"condition.id\\\">{{condition.inventoryCondition}}</mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Product Status</label>\\n                                        <mat-select matInput formControlName=\\\"itemStatusId\\\" [(ngModel)]=\\\"updateProductObj.stasId\\\" required>\\n                                            <mat-option *ngFor=\\\"let status of statusList\\\" [value]=\\\"status.id\\\">{{status.itemStatus}}</mat-option>\\n                                        </mat-select>\\n\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"complexForm.controls['itemStatusId'].hasError('required') \\\" class=\\\"text-danger\\\">Please\\n                                        select itemStatus\\n                                    </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <label>Date</label>\\n                                        <input matInput type=\\\"text\\\" [ngModel]=\\\"productUpdatedDate| date: 'dd-MMM-yyyy'\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"updateUser()\\\">Submit</button>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\" (click)=\\\" gotoHomePage()\\\">Cancel</button>\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\\"loadBtn\\\">\\n        <div class=\\\"ui-overlay-c\\\">\\n            <div class=\\\"loading\\\" style=\\\" margin: 0;\\n                                        position: absolute;\\n                                        top: 50%;\\n                                        left: 50%;\\n                                        transform: translate(-50%, -50%);\\\">\\n                <div class=\\\"loading-bar\\\"></div>\\n                <div class=\\\"loading-bar\\\"></div>\\n                <div class=\\\"loading-bar\\\"></div>\\n                <div class=\\\"loading-bar\\\"></div>\\n                <h4 style=\\\"color: #e0dcd4\\\">Loading....</h4>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n<!--<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Update Product</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                      \\n                        <form [formGroup]=\\\"complexForm\\\" method=\\\"post\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"QR Code\\\" formControlName=\\\"barcode\\\" [(ngModel)]=\\\"updateProductObj.barcodeId\\\"\\n                                            readonly type=\\\"text\\\">\\n                                    </mat-form-field>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"SKU Code\\\" formControlName=\\\"skuCode\\\" [(ngModel)]=\\\"updateProductObj.skuCode\\\"\\n                                            readonly type=\\\"text\\\">\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput placeholder=\\\"Product Name\\\" type=\\\"text\\\" formControlName=\\\"productName\\\"\\n                                            [(ngModel)]=\\\"updateProductObj.productName\\\" readonly>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Facility</label>\\n                                        <mat-select matInput formControlName=\\\"facility\\\" [(ngModel)]=\\\"updateProductObj.facilityId\\\"\\n                                            required>\\n                                            <mat-option *ngFor=\\\"let item of facilitiesList\\\" [value]=\\\"item.id\\\">{{item.facility}}</mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Product Condition</label>\\n                                        <mat-select matInput formControlName=\\\"inventoryConditionId\\\" [(ngModel)]=\\\"updateProductObj.condId\\\"\\n                                            (ngModelChange)=\\\"getStatusList()\\\" required>\\n                                            <mat-option *ngFor=\\\"let condition of conditionsList\\\" [value]=\\\"condition.id\\\">{{condition.inventoryCondition}}</mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Product Status</label>\\n                                        <mat-select matInput formControlName=\\\"itemStatusId\\\" [(ngModel)]=\\\"updateProductObj.stasId\\\"\\n                                            required>\\n                                            <mat-option *ngFor=\\\"let status of statusList\\\" [value]=\\\"status.id\\\">{{status.itemStatus}}</mat-option>\\n                                        </mat-select>\\n\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"complexForm.controls['itemStatusId'].hasError('required') \\\" class=\\\"text-danger\\\">Please\\n                                        Select itemStatus\\n                                    </span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                            <input matInput placeholder=\\\"date\\\" type=\\\"text\\\" [ngModel]=\\\"productUpdatedDate| date: 'dd-MMM-yyyy'\\\"\\n                                                readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                        </mat-form-field>\\n                                    </div>\\n                                </div>\\n                                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"updateUser()\\\">Submit</button>\\n                                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\" (click)=\\\" gotoHomePage()\\\">Cancel</button>\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>-->\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatDialog } from '@angular/material';\nimport { QRCodeScanner } from '../../+qrcode-scanner/qrcode-scanner.service';\n\n\n@Component({\n    selector: 'inventory-update',\n    templateUrl: './update-product.component.html',\n    styleUrls: ['./update-product.component.css']\n})\n\nexport class UpdateProductComponent implements OnInit {\n    public complexForm: FormGroup;\n    formValidate: boolean;\n    loadBtn=false;\n    inventoryConditionId: AbstractControl;\n    itemStatusId: AbstractControl;\n    productName: AbstractControl;\n    barcode: AbstractControl\n    skuCode: AbstractControl\n    povendor: AbstractControl\n    serialNumber: AbstractControl\n    resultQrcode: any;\n    invoiceId;\n\n\n\n    updateProductObj: any = {}\n    productUpdatedDate = new Date()\n    constructor(private readonly fb: FormBuilder,\n        private readonly router: Router,\n        public appService: AppService,\n        private readonly _qrScanner: QRCodeScanner,\n        public dialog: MatDialog\n    ) {\n\n    }\n\n    conditionsList;\n    facilitiesList\n    statusList;\n    inventoryId\n    skuCodedata;\n    ProductName\n    id\n    poVendorsList;\n    fac;\n    ngOnInit() {\n        this.fac = JSON.parse(localStorage.getItem('facility'))\n        /**\n     * Back Button event trigger\n     */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n\n        this.complexForm = this.fb.group({\n            barcode: [null, [Validators.required]],\n            skuCode: [null, [Validators.required]],\n            productName: [null, [Validators.required]],\n            inventoryConditionId: [null, [Validators.required]],\n            itemStatusId: [null, [Validators.required]],\n            facility: [null, [Validators.required]],\n            povendor: [null, [Validators.required]],\n            serialNumber: [null, [Validators.required, Validators.maxLength(32)]]\n        })\n        this.barcode = this.complexForm.controls[\"barcode\"];\n        this.skuCode = this.complexForm.controls[\"skuCode\"];\n        this.productName = this.complexForm.controls[\"productName\"];\n        this.inventoryConditionId = this.complexForm.controls[\"inventoryConditionId\"];\n        this.itemStatusId = this.complexForm.controls[\"itemStatusId\"];\n        this.povendor = this.complexForm.controls[\"povendor\"]\n        this.serialNumber = this.complexForm.controls[\"serialNumber\"]\n        const QRCodeId = localStorage.getItem('QRCode')\n        this.getDetailsByQrcodeId(QRCodeId);\n    }\n\n    getDetailsByQrcodeId(QRId) {\n        this.appService.getProductByQrId_prod(QRId).subscribe((data: any) => {\n            if (data.data != null) {\n                if (data.data.facilityId.id == this.fac.id) {\n                    this.updateProductObj = data.data;\n                    this.skuCodedata = this.updateProductObj.inventoryId.skuCode\n                    this.ProductName = this.updateProductObj.inventoryId.productName\n                    this.inventoryId = data.data.inventoryId.id\n                    this.updateProductObj.purchaseOrderNumber = data.data.poVendorId.purchaseOrderNumber;\n                    this.updateProductObj.purchaseOrderId = data.data.poVendorId.id;\n                    this.updateProductObj.serialNumber = data.data.serialNumber\n                    this.id = data.data.id\n                    this.getFacilitiesList()\n                    this.getAllProductConditionList();\n                    this.getAllProductStatusList();\n                    this.getAllPovendors();\n                } else {\n                     this.openDialog(\"This product is not in your facility\")\n                }\n            } else {\n                this.openDialog(data.error.message)\n            }\n        })\n    }\n    getFacilitiesList() {\n        this.appService.getFacilities().subscribe((data) => {\n            const facilityRes: any = data;\n            if (facilityRes.data != null) {\n                this.facilitiesList = facilityRes.data;\n                // const facilityObj: any = this.facilitiesList.find(status => this.updateProductObj.facilityId.id === status.id)\n                this.updateProductObj.facilityId = this.fac.facility;\n            }\n        })\n    }\n    getAllPovendors() {\n        this.appService.getAllPovendors().subscribe((data) => {\n            const poVendors: any = data;\n            if (poVendors.data != null) {\n                this.poVendorsList = poVendors.data;\n            }\n        })\n    }\n\n    getInvoiceBybarcode() {\n        this._qrScanner.promiseScan().then(result => {\n            this.resultQrcode = result;\n            if (!this.resultQrcode.cancelled) {\n                this.updateProductObj.serialNumber = this.resultQrcode.text\n            }\n        });\n    }\n\n    getAllProductConditionList() {\n        this.appService.getProductConditionList().subscribe(data => {\n            const condRes: any = data;\n            if (condRes.data != null) {\n                this.conditionsList = condRes.data;\n                const condObj: any = this.conditionsList.find(status => this.updateProductObj.inventoryConditionId.id === status.id)\n                this.updateProductObj.condId = condObj.id;\n                if (this.updateProductObj.condId) {\n                    this.appService.getStatusByInventoryCondition(this.updateProductObj.condId).subscribe((data) => {\n                        const condRes: any = data;\n                        this.statusList = condRes.data;\n                    })\n                }\n            }\n        })\n    }\n    getStatusChange() {\n\n        if (this.updateProductObj.condId) {\n            this.appService.getStatusByInventoryCondition(this.updateProductObj.condId).subscribe((data) => {\n                const condRes: any = data;\n                this.statusList = condRes.data;\n            })\n        }\n        this.updateProductObj.stasId = ''\n    }\n    getAllProductStatusList() {\n\n        this.appService.getAllProductStatusTypes().subscribe(data => {\n            const statusRes: any = data;\n            if (statusRes.data != null) {\n                this.statusList = statusRes.data;\n                const statusObj: any = this.statusList.find(status => this.updateProductObj.itemStatusId.id === status.id)\n                this.updateProductObj.stasId = statusObj.id\n            }\n        })\n    }\n\n    submitted\n    errorMessage;\n    updateUser() {\n        if (this.updateProductObj.serialNumber == null) {\n            this.complexForm.controls.serialNumber.setValue(1)\n        }\n        if (this.complexForm.valid) {\n            this.submitted = true;\n            this.loadBtn=true;\n            const todayDate = new Date();\n            // this.facilitiesList.find(status => status.id === this.updateProductObj.facilityId)\n            this.statusList.find(status => status.id === this.updateProductObj.stasId)\n            this.conditionsList.find(status => status.id === this.updateProductObj.condId)\n\n            const postObj: any = {}\n            postObj.id = this.id\n            postObj.facilityId = {\n                \"id\": this.fac.id,\n                \"facilityName\": this.fac.facilityName,\n                \"facility\": this.fac.facility\n            }\n            // postObj.facilityId = this.facilitiesList.find(status => status.id === this.updateProductObj.facilityId)\n            postObj.inventoryConditionId = this.conditionsList.find(status => status.id === this.updateProductObj.condId)\n            postObj.itemStatusId = this.statusList.find(status => status.id === this.updateProductObj.stasId)\n            postObj.inventoryId = {\n                \"id\": this.inventoryId,\n                \"enabled\": null,\n                \"inventory\": 2,\n                \"skuCode\": this.updateProductObj.inventoryId.skuCode,\n                \"productName\": this.updateProductObj.inventoryId.productName,\n                \"createdTime\": moment(todayDate).format(),\n                \"updatedTime\": null,\n                \"badInventory\": null,\n                \"blockedInventory\": 0,\n                \"pendingQcAccessment\": null,\n                \"thresholdLevel\": null,\n                \"returnProduct\": null,\n                \"inventoryConditionId\": this.conditionsList.find(status => status.id === this.updateProductObj.condId),\n\n            }\n            postObj.poVendorId = this.poVendorsList.find(status => status.purchaseOrderNumber === this.updateProductObj.purchaseOrderNumber)\n\n            postObj.itemStatusId.inventoryConditionId = this.conditionsList.find(status => status.id === this.updateProductObj.condId)\n            postObj.barcode = this.updateProductObj.barcode;\n            postObj.poVendorId = {\n                \"id\": this.updateProductObj.purchaseOrderId\n            }\n            postObj.productImage = null;\n            postObj.createdUser = localStorage.getItem('userName');\n            postObj.updatedUser = localStorage.getItem('userName');\n            postObj.updatedTime = moment(todayDate).format();\n            postObj.createdTime = moment(todayDate).format();\n\n            if (this.updateProductObj.serialNumber) {\n                postObj.serialNumber = this.updateProductObj.serialNumber\n            }\n            this.appService.updateProduct_prod(postObj).subscribe((data: any) => {\n                this.loadBtn=false;\n                if (data.error == null) {\n                    this.openDialog('Product Updated Successfully')\n                } else {\n                    this.openDialogError(data.error.message);\n                }\n            })\n        }\n        else {\n            this.formValidate = true;\n        }\n    }\n\n    openDialog(text) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', text)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.router.navigate(['./inventory'])\n            }\n        });\n    }\n    openDialogError(text) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', text)\n        // dialogRef.afterClosed().subscribe(result => {\n        //     this.errorMessage = \"Serial Number already exists\"\n        //     setTimeout(() => {\n        //         this.errorMessage = \"\"\n        //     }, 3000);\n        // });\n    }\n\n    gotoHomePage() {\n        this.complexForm.reset();\n        setTimeout(() => {\n            this.router.navigate(['./inventory']);\n        });\n    }\n\n}\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UpdateProductComponent, DialogComponent } from './update-product.component';\n\n\nimport {\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatIconModule\n\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UpdateProductComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatDialogModule,\n        CommonModule,\n        [RouterModule.forChild(routes)],\n        FormsModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' })\n    ],\n    declarations: [UpdateProductComponent, DialogComponent],\n    providers: [\n\n    ],\n    entryComponents: [DialogComponent]\n})\nexport class UpdateProductModule { }\n"],"sourceRoot":""}