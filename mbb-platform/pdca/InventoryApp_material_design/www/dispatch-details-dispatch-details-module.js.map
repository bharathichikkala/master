{"version":3,"sources":["webpack:///./src/app/+dispatch/+dispatch-details/dispatch-details.component.html","webpack:///./src/app/+dispatch/+dispatch-details/dispatch-details.component.ts","webpack:///./src/app/+dispatch/+dispatch-details/dispatch-details.module.ts"],"names":[],"mappings":"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","file":"dispatch-details-dispatch-details-module.js","sourcesContent":["module.exports = \"\\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <mat-form-field>\\n                    <input matInput name=\\\"startDate\\\" [matDatepicker]=\\\"dp3\\\" placeholder=\\\"Start Date\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [(ngModel)]=\\\"startDate\\\"\\n                        disabled>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n                </mat-form-field>\\n                <span *ngIf=\\\"submitted && startDate==null\\\" style='color:red'>Please select start Date\\n            </span>\\n            </div>\\n\\n            <div class=\\\"col-12\\\">\\n                <mat-form-field>\\n                    <input matInput name=\\\"endDate\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"dp4\\\" placeholder=\\\"End Date\\\" [(ngModel)]=\\\"endDate\\\"\\n                        disabled>\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dp4\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #dp4 disabled=\\\"false\\\"></mat-datepicker>\\n                </mat-form-field>\\n                <span *ngIf=\\\"submitted && endDate==null\\\" style='color:red'>Please select end Date\\n            </span>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <span *ngIf=\\\"errorMessage\\\" class=\\\"text-danger\\\" style=\\\"text-align:center\\\">{{errorMessage}}</span><br>\\n            </div>\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit</button>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <mat-form-field class=\\\"example-full-width\\\" *ngIf=\\\"dispatachDetails?.length\\\">\\n                <input matInput placeholder=\\\"QR Code\\\" [(ngModel)]=\\\"searchText\\\">\\n            </mat-form-field>\\n            <div *ngFor=\\\"let prod of dispatachDetails|filter : searchText\\\">\\n                <mat-accordion>\\n                    <mat-expansion-panel style=\\\"border-left: 2px solid #26c6da;\\\">\\n                        <mat-expansion-panel-header>\\n                            <mat-panel-title>\\n                                {{prod.barcode}}\\n                            </mat-panel-title>\\n                        </mat-expansion-panel-header>\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-6\\\">Invoice</div>\\n                            <div class=\\\"col-6\\\"> {{prod.invoiceId}}</div>\\n                            <div class=\\\"col-6\\\">Dispatch Date</div>\\n                            <div class=\\\"col-6\\\">{{prod.updatedTime|date}}</div>\\n                            <div class=\\\"col-6\\\">Comment</div>\\n                            <div class=\\\"col-6\\\">{{prod.comment}}</div>\\n                        </div>\\n                    </mat-expansion-panel>\\n                </mat-accordion>\\n                <div style=\\\"margin:3px\\\"></div>\\n            </div>\\n        </div>\\n    </div>\\n    <!-- <div>\\n        <loader [loading]=\\\"loading\\\"></loader>\\n      </div> -->\\n</div>\"","import { Component, OnInit,Pipe, PipeTransform } from '@angular/core';\nimport { AppService } from '../../app.service';\n\n\n\n@Component({\n    selector: 'dispatch-details-module',\n    templateUrl: './dispatch-details.component.html',\n    styles: [`\n    .footer-text{\n        font-weight:bold\n    }\n    `]\n})\n\nexport class DispatchDetailsComponent implements OnInit {\n\n    submitted;\n    dispatachDetails;\n    private startDate = null;\n    private endDate = null;\n    public loading = false;\n\n\n    errorMessage: any;\n    constructor(\n        public appService: AppService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        /**\n        * Back Button event trigger\n        */\n        history.pushState(null, null, location.href);\n        window.onpopstate = function (event) {\n            history.go(1);\n        };\n    }\n\n    submit() {\n\n        this.submitted = true;\n        this.loading = true;\n        if (this.startDate != null && this.endDate != null) {\n            if (new Date(this.startDate) > new Date(this.endDate)) {\n                this.errorMessage = 'End date should be greater than start date';\n                setTimeout(() => {\n                    this.errorMessage = '';\n                }, 3000)\n            } else {\n                this.startDate = this.convert(this.startDate)\n                this.endDate = this.convert(this.endDate)\n\n                this.appService.getAllDispatchDetails(this.startDate, this.endDate).subscribe((data: any) => {\n                    if (data.data != null) {\n                        this.loading = false;\n                        this.dispatachDetails = data.data\n                        if (this.dispatachDetails.length === 0) {\n                            this.errorMessage = 'No records found these selected dates';\n                            setTimeout(() => {\n                                this.errorMessage = '';\n                            }, 3000)\n                        }\n                    }\n                })\n            }\n        }\n\n    }\n\n    convert(str) {\n        const date = new Date(str),\n            mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n            day = (\"0\" + date.getDate()).slice(-2);\n        return [date.getFullYear(), mnth, day].join(\"-\");\n    }\n}\n\n\n\n@Pipe({\n    name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], searchText: string): any[] {\n        if (!items) return [];\n        if (!searchText) return items;\n        searchText = searchText.toLowerCase();\n        return items.filter(it => {\n            return it.barcode.toLowerCase().includes(searchText);\n        });\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DispatchDetailsComponent, FilterPipe } from './dispatch-details.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {SharedModule} from '../../shared.module'\n\nimport {\n    MatInputModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    \n} from '@angular/material';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DispatchDetailsComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatExpansionModule,\n        MatFormFieldModule,\n        MatInputModule,\n        SharedModule,\n        CommonModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        [RouterModule.forChild(routes)],\n        FormsModule, ReactiveFormsModule,\n    ],\n    declarations: [FilterPipe, DispatchDetailsComponent],\n    providers: [\n\n    ],\n    entryComponents: []\n})\nexport class DispatchDetailsModule { }\n"],"sourceRoot":""}