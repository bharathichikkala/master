{"version":3,"sources":["webpack:///./src/app/+auth/+forgot/forgot-routing.module.ts","webpack:///./src/app/+auth/+forgot/forgot.component.html","webpack:///./src/app/+auth/+forgot/forgot.component.ts","webpack:///./src/app/+auth/+forgot/forgot.module.ts"],"names":[],"mappings":"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","file":"forgot-forgot-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ForgotComponent} from \"./forgot.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: ForgotComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class ForgotRoutingModule { }\n","module.exports = \"<!--<header id=\\\"header\\\" class=\\\"animated fadeInDown\\\">\\n  <div id=\\\"logo-group\\\">\\n    <span id=\\\"logo\\\">\\n            \\n         </span>\\n  </div>\\n</header>-->\\n<!-- <br><br>\\n<div id=\\\"main\\\" role=\\\"main\\\" class=\\\"animated fadeInDown\\\">\\n\\n  <div id=\\\"content\\\" class=\\\"container\\\">\\n\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto\\\">\\n        <div class=\\\"loginui well no-padding\\\">\\n          <form [formGroup]=\\\"complexForm\\\" method=\\\"post\\\" *ngIf=\\\"userRegisterModel\\\" id=\\\"login-form\\\" class=\\\"smart-form client-form\\\">\\n            <header class=\\\"header-tag\\\" style=\\\"background-color:white\\\">\\n              <img src=\\\"assets/img/logom.png\\\" alt=\\\"MedicalBulkBuy\\\"> -->\\n<!-- <div class=\\\"app-version\\\">Version 9.0 </div> -->\\n<!-- </header>\\n            <fieldset>\\n              <section *ngIf=\\\"errorMessage\\\" style=\\\"color: red;\\\"> {{errorMessage}} </section>\\n              <section>\\n                <label class=\\\"label\\\" for=\\\"email\\\" [ngClass]=\\\"{'has-error':! this.email.valid &&  this.email}\\\"><b>Email</b></label>\\n                <div class=\\\"form-group form-control  input\\\">\\n                  <label class=\\\"input\\\">\\n                    <i class=\\\"icon-append fa fa-user\\\"></i>\\n                    <input type=\\\"text\\\" name=\\\"email\\\" [formControl]=\\\"this.email\\\" [(ngModel)]=\\\"userRegisterModel.email\\\" placeholder=\\\"Email\\\" />\\n                    <span *ngIf=\\\" this.email.hasError('required') &&submitted  \\\" class=\\\" text-danger \\\">Please enter email</span>\\n                    <span *ngIf=\\\" this.email.hasError('pattern') \\\" class=\\\" text-danger \\\">Please enter valid email</span>\\n                  </label>\\n                </div>\\n              </section> -->\\n\\n<!--<section>\\n                <label class=\\\"label\\\" for=\\\"phone\\\" [ngClass]=\\\"{'has-error':! this.phone.valid &&  this.phone}\\\"><b>Your Phone Number</b></label>\\n                <div class=\\\"form-group form-control  input\\\">\\n                  <label class=\\\"input\\\">\\n                    <i class=\\\"icon-append fa fa-lock\\\"></i>\\n                    <input type=\\\"text\\\" name=\\\"phone\\\" [formControl]=\\\"this.phone\\\" [(ngModel)]=\\\"userRegisterModel.phone\\\" placeholder=\\\"Phone\\\" />\\n                    <span *ngIf=\\\" this.phone.hasError('pattern') \\\" class=\\\" text-danger \\\">Please enter 10 Digit Number</span>\\n                    <span *ngIf=\\\" this.phone.hasError('required')  && submitted\\\" class=\\\" text-danger \\\">Please enter Phone</span>\\n                  </label>\\n                </div>\\n              </section>-->\\n\\n<!-- <br>\\n              <div class=\\\"show-grid\\\">\\n\\n                <span class=\\\"hidden-mobile hiddex-xs\\\"><b>Already registered?</b> </span>\\n                <a routerLink=\\\"/loginUrl\\\">\\n                  <u><b> Sign In</b></u>\\n                </a>\\n              </div>\\n\\n              <br>\\n\\n            </fieldset> -->\\n\\n\\n\\n\\n<!--<div class=\\\"row show-grid\\\">\\n              <div class=\\\"col-xs-1 \\\"> </div>\\n              <div class=\\\"col-xs-11 \\\"> <span class=\\\"hidden-mobile hiddex-xs\\\">Need an account?</span> <a routerLink=\\\"/register\\\"><u>Create account</u></a>\\n              </div>\\n              </div>\\n            <br>-->\\n\\n<!-- <footer style=\\\"background-color:white\\\">\\n              <button type=\\\"submit\\\" (click)=\\\"submit(userRegisterModel)\\\" [disabled]=\\\"!complexForm.valid\\\" class=\\\"btn btn-primary\\\">\\n                <i class=\\\"fa fa-refresh\\\"></i> Confirm with OTP\\n                <i class=\\\"fa fa-cog fa-spin\\\" *ngIf=\\\"loading\\\"></i>\\n                <span *ngIf=\\\"loading\\\">loading...</span>\\n              </button>\\n            </footer>\\n          </form>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n\\n</div> -->\\n\\n\\n\\n\\n<div class=\\\"wrapper wrapper-full-page\\\">\\n  <div class=\\\"page-header login-page header-filter\\\" filter-color=\\\"black\\\"\\n    style=\\\"background-image: url('assets/img/background.jpg'); background-size: cover; background-position: top center;height: 100%;\\\">\\n    <div class=\\\"container\\\">\\n      <br><br><br><br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4 col-md-6 col-sm-6 ml-auto mr-auto\\\">\\n          <!--<form [formGroup]=\\\"complexForm\\\" method=\\\"post\\\" *ngIf=\\\"userLogin\\\" class=\\\"smart-form client-form\\\">-->\\n          <form [formGroup]=\\\"complexForm\\\" *ngIf=\\\"userRegisterModel\\\" id=\\\"login-form\\\"\\n            class=\\\"form ng-untouched ng-pristine ng-valid\\\" method=\\\"\\\" novalidate=\\\"\\\">\\n            <div class=\\\"card card-forgot-password\\\">\\n              <div class=\\\"card-header text-center\\\">\\n                <img src=\\\"assets/img/logom.png\\\" width=\\\"100%\\\"><br />\\n              </div>\\n              <div class=\\\"card-body \\\">\\n                <section *ngIf=\\\"errorMessage\\\" style=\\\"color: red;\\\"> {{errorMessage}} </section>\\n                <span class=\\\"bmd-form-group\\\">\\n                  <div class=\\\"input-group\\\">\\n                    <!-- <label for=\\\"forgot-password\\\">Please enter your email to get OTP</label><br/> -->\\n                    <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" [formControl]=\\\"this.email\\\"\\n                      [(ngModel)]=\\\"userRegisterModel.email\\\">\\n\\n                  </div>\\n                  <b *ngIf=\\\" this.email.hasError('required') &&submitted  \\\" class=\\\" text-danger \\\">Please\\n                    enter valid email</b>\\n\\n                  <b *ngIf=\\\" this.email.hasError('pattern') \\\" class=\\\" text-danger \\\">Please enter\\n                    valid email</b>\\n                </span>\\n                <br>\\n                <div class=\\\"form-group\\\">\\n\\n                  <span class=\\\"hidden-mobile hiddex-xs\\\"><b>Already registered?</b> </span>\\n                  <a routerLink=\\\"/loginUrl\\\">\\n                    <u><b> Sign In</b></u>\\n                  </a>\\n                </div>\\n              </div>\\n\\n              <!-- <br>\\n                            <span style=\\\"color:red;text-align:center\\\">{{loginErrorMessage}}</span>\\n                            <div class=\\\"card-footer justify-content-center\\\">\\n                                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"doLogin()\\\">Login</button>\\n                            </div> -->\\n              <!-- <footer style=\\\"background-color:white\\\"> -->\\n              <div class=\\\"card-footer\\\">\\n                <button style=\\\"margin-left:85px;\\\" type=\\\"submit\\\" (click)=\\\"submit(userRegisterModel)\\\"\\n                  [disabled]=\\\"!complexForm.valid\\\" class=\\\"btn btn-primary\\\">\\n                  <i class=\\\"fa fa-cog fa-spin\\\" *ngIf=\\\"loading\\\"></i>\\n                  <span *ngIf=\\\"loading\\\"> Sending...</span>\\n                  <i class=\\\"fa fa-refresh\\\" *ngIf=\\\"!loading\\\"></i> <span *ngIf=\\\"!loading\\\">Confirm with OTP</span>\\n                </button>\\n              </div>\\n              <!-- </footer> -->\\n            </div>\\n\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <footer class=\\\"footer \\\">\\n      <div class=\\\"container\\\">\\n      </div>\\n    </footer>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl, AbstractControl, FormArray, FormsModule } from '@angular/forms';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  providers: [AuthService],\n  styles: []\n})\nexport class ForgotComponent implements OnInit {\n  public errorMessage: string;\n  userRegisterModel = new UserRegisterModel('', '');\n\n  public complexForm: FormGroup;\n  public email: AbstractControl;\n  public phone: AbstractControl;\n  submitted: boolean;\n  loading = false;\n\n\n  constructor(\n    //  private alertNotificationService: AlertNotificationService,\n    private readonly router: Router, private readonly fb: FormBuilder,\n    private readonly authService: AuthService\n  ) {\n    this.complexForm = fb.group({\n      email: [null, Validators.compose([Validators.required,\n      Validators.pattern('^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$')])],\n      // phone: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]{10,10}$')], )]\n  //    phone: []\n    })\n\n    this.email = this.complexForm.controls['email'];\n    this.phone = this.complexForm.controls['phone'];\n\n\n  }\n\n  ngOnInit() {\n  }\n\n  submit(event) {\n    this.submitted = true;\n    this.loading = true;\n    \n    this.authService.userForgotPassword(event.email, event.phone).subscribe(\n      (data: any) => {\n        if (data.data != null) {\n          this.errorMessage = '';\n          sessionStorage.setItem('userData', data.data.id)\n          this.loading = false;\n          this.router.navigate(['/loginUrl/otp', { data: 'Success' }])\n        } else {\n          this.loading = false;\n          this.errorMessage = data.error.message;\n        }\n      },\n      error => {\n        this.loading = false;\n      });\n  }\n\n\n\n\n}\n\nexport class UserRegisterModel {\n  constructor(\n\n    public email: string,\n    public phone: string\n  ) { }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ForgotRoutingModule } from './forgot-routing.module';\nimport { ForgotComponent } from './forgot.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { SmartadminValidationModule } from '../../shared/forms/validation/smartadmin-validation.module';\n// import { SmartadminModule } from '../../shared/smartadmin.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ForgotRoutingModule, FormsModule,\n    // SmartadminValidationModule,\n     ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    // SmartadminModule\n  ],\n  declarations: [ForgotComponent]\n})\nexport class ForgotModule { }\n"],"sourceRoot":""}