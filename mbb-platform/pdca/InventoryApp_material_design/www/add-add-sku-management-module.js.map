{"version":3,"sources":["webpack:///./src/app/+sku-management/add/add-sku-management.component.css","webpack:///./src/app/+sku-management/add/add-sku-management.component.html","webpack:///./src/app/+sku-management/add/add-sku-management.component.ts","webpack:///./src/app/+sku-management/add/add-sku-management.module.ts"],"names":[],"mappings":"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","file":"add-add-sku-management-module.js","sourcesContent":["module.exports = \"    \\n\\n\\n   #ribbon {\\n    min-height: 22px;\\n    background: none;\\n    padding: 0px -15px;\\n    position: relative;\\n   }\\n\\n   @media only screen and (max-width: 992px) and (min-width: 240px){\\n   #ribbon {\\n    background: none\\n   }\\n   }\\n\\n   .mat-focused .placeholder {    \\n      color: #AAAAAA;\\n      }\\n\\n   .placeholder {\\n       color:#AAAAAA;\\n      }\\n\\n\\n   \\n\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Add SKU</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"addSKUForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\" >\\n                                        <input matInput  [formControl]=\\\"this.skucode\\\" [(ngModel)]=\\\"skuObj.skuCode\\\" type=\\\"text\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">SKU Code</mat-placeholder>\\n                                    </mat-form-field>\\n\\n                                    <span *ngIf=\\\"this.skucode.hasError('required') &&formValidate \\\" class=\\\" text-danger \\\">Please\\n                                        enter SKU code</span>\\n                                    <span *ngIf=\\\"this.skucode.hasError('maxlength')\\\" class=\\\"text-danger\\\">Please\\n                                        enter valid SKU Code with 30 letters only</span>\\n                                </div>\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput  type=\\\"text\\\" [formControl]=\\\"this.productName\\\" [(ngModel)]=\\\"skuObj.productName\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Product Name</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.productName.hasError('required') &&formValidate \\\" class=\\\" text-danger \\\">Please\\n                                        enter product name</span>\\n                                    <span *ngIf=\\\"this.productName.hasError('maxlength')\\\" class=\\\"text-danger\\\">Please\\n                                        enter product name less than 100 letters only</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput  type=\\\"number\\\" [formControl]=\\\"this.threshold\\\" [(ngModel)]=\\\"skuObj.thresholdLevel\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Threshold Level</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.threshold.hasError('required') &&formValidate \\\" class=\\\" text-danger \\\">Please\\n                                        enter\\n                                        threshold level</span>\\n                                    <span *ngIf=\\\"this.threshold.hasError('maxlength') ||this.threshold.hasError('pattern') \\\" class=\\\"text-danger\\\">Please enter valid threshold level between 1-999 only</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <textarea matInput  [formControl]=\\\"this.description\\\" [(ngModel)]=\\\"skuObj.description\\\"></textarea>\\n                                        <mat-placeholder class=\\\"placeholder\\\">Description</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.description.hasError('required') &&formValidate \\\" class=\\\"text-danger \\\">Please\\n                                        enter description</span>\\n                                    <span *ngIf=\\\"this.description.hasError('maxlength')\\\" class=\\\"text-danger\\\">Please\\n                                        enter only 200 letters only</span>\\n                                </div>\\n\\n                            </div>\\n                            <button mat-raised-button class=\\\"btn btn-success pull-right\\\" (click)=\\\"addSkuDetails()\\\">Submit</button>\\n                            <button mat-raised-button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"gotoPreviousPage()\\\">Cancel</button>\\n                            <div class=\\\"clearfix\\\"></div>\\n\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- <popup></popup> -->\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { PlatformLocation } from '@angular/common'\ndeclare var $: any;\nimport { AppService } from '../../app.service';\nimport { MatDialog } from '@angular/material';\nimport {PopUpComponent} from '../../popup/popup.component';\n\n@Component({\n    selector: 'app-add-sku-management',\n    templateUrl: './add-sku-management.component.html',\n    styleUrls: ['./add-sku-management.component.css']\n})\nexport class AddSkuManagementComponent implements OnInit {\n\n    public addSKUForm: FormGroup;\n    public skuObj: any = {}\n    formValidate: boolean;\n    successResponse;\n    errorResponse;\n\n    public skucode: AbstractControl;\n    public productName: AbstractControl;\n    public inventoryConditionId: AbstractControl;\n    public description: AbstractControl;\n    public threshold: AbstractControl;\n\n    constructor(\n        public dialog: MatDialog,\n        public platformLocation: PlatformLocation,\n        private readonly fb: FormBuilder,\n        private readonly router: Router,\n        public appService: AppService\n    ) {\n        this.addSKUForm = this.fb.group({\n            SKUCODE: [null, [Validators.required, Validators.maxLength(30)]],\n            PROD_NAME: [null, [Validators.required, Validators.maxLength(100)]],\n            DESCRIPTION: [null, [Validators.required, Validators.maxLength(200)]],\n            THRESHOLD: [null, [Validators.required, Validators.pattern('^([1-9][0-9]{0,2})$')]]\n        })\n        this.skucode = this.addSKUForm.controls['SKUCODE'];\n        this.productName = this.addSKUForm.controls['PROD_NAME'];\n        this.description = this.addSKUForm.controls['DESCRIPTION'];\n        this.threshold = this.addSKUForm.controls['THRESHOLD'];\n    }\n    @ViewChild(PopUpComponent) popup;\n\n    productData;\n    ngOnInit() {\n        this.skuObj.thresholdLevel = 5;\n        /**\n     * Back Button event trigger\n     */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n    }\n   \n    addSkuDetails() {\n        if (this.addSKUForm.valid) {\n            this.skuObj.createdTime = new Date();\n            this.appService.addingSku(this.skuObj).subscribe(data => {\n                const addRes: any = data;\n                if (addRes.data != null) {\n                    this.openDialog(\"SKU added successfully\")\n                    this.addSKUForm.reset();\n                    setTimeout(() => {\n                        this.skuObj = {}\n                    }, 500)\n\n                } else {\n                    this.openDialog(addRes.error.message)\n                }\n            })\n        }\n        else {\n            this.formValidate = true;\n        }\n    }\n\n    gotoPreviousPage() {\n        this.addSKUForm.reset();\n        setTimeout(() => {\n            this.router.navigate(['./inventory'])\n        })\n    }\n  \n\n    openDialog(msgText) {\n      const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', msgText)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.gotoPreviousPage();\n            }\n        });\n    }\n}\n\n\n\n\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AddSkuManagementComponent, DialogComponent } from './add-sku-management.component';\nimport {SharedModule} from '../../shared.module'\n\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatRippleModule,\n  MatFormFieldModule,\n  MatTooltipModule,\n  MatIconModule,\n  MatSelectModule,MatDialogModule\n} from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddSkuManagementComponent\n  }\n]\n\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule,\n    CommonModule,\n    [RouterModule.forChild(routes)],\n    FormsModule, \n    SharedModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'})\n  ],\n  declarations: [AddSkuManagementComponent, DialogComponent],\n  entryComponents: [DialogComponent],\n  providers: [\n\n  ]\n})\nexport class AddSkuManagementModule { }\n"],"sourceRoot":""}