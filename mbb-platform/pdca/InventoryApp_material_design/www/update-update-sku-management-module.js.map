{"version":3,"sources":["webpack:///./src/app/+sku-management/update/update-sku-management.component.css","webpack:///./src/app/+sku-management/update/update-sku-management.component.html","webpack:///./src/app/+sku-management/update/update-sku-management.component.ts","webpack:///./src/app/+sku-management/update/update-sku-management.module.ts"],"names":[],"mappings":"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","file":"update-update-sku-management-module.js","sourcesContent":["module.exports = \".mat-focused .placeholder {    \\n    color: #AAAAAA;\\n    }\\n  .placeholder {\\n     color:#AAAAAA;\\n    }\\n  .height-skus{\\n      max-height: 100px;\\n      overflow-y: scroll;\\n      overflow-x: hidden;\\n      display: block;\\n      }\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\" style=\\\"padding-left:0px;padding-right:0px\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Update SKU</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n\\n                        <form (ngSubmit)=\\\"getSkuDetails()\\\" #updateForm=\\\"ngForm\\\">\\n\\n                            <div *ngIf=\\\"!skuDetails\\\">\\n                                <div class=\\\"row\\\">\\n                                    <!-- <div class=\\\"col-md-12\\\">\\n                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                            <input matInput [(ngModel)]=\\\"skuValue\\\" name=\\\"skuValue\\\" #sku=\\\"ngModel\\\" maxlength=\\\"30\\\" required>\\n                                            <mat-placeholder class=\\\"placeholder\\\">SKU code</mat-placeholder>\\n                                        </mat-form-field>\\n                                        <div *ngIf=\\\"!submitted || sku.touched\\\">\\n                                            <span class=\\\" text-danger\\\" *ngIf=\\\"(sku.errors && sku.errors.required)\\\">\\n                                                Please enter SKU code </span>\\n                                        </div>\\n                                    </div> -->\\n\\n                                    <div class=\\\"col-md-12\\\">\\n\\n                                        <mat-form-field class=\\\"example-full-width\\\">\\n                                            <input matInput [(ngModel)]=\\\"skuValue\\\" (keyup)=\\\"getSKUSbasedonSearch()\\\"\\n                                                name=\\\"skuValue\\\" #sku=\\\"ngModel\\\" maxlength=\\\"30\\\" required autocomplete=\\\"off\\\">\\n                                            <mat-placeholder class=\\\"placeholder\\\">SKU Code</mat-placeholder>\\n\\n                                        </mat-form-field>\\n\\n                                        <div class=\\\"height-skus\\\">\\n                                            <div *ngFor=\\\"let key of filteredSkusList\\\" (click)=\\\"selectSKU(key)\\\" style=\\\"border-bottom:1px solid #AAAAAA;padding: 3px\\\">{{key.skuCode}}-{{key.productName}}</div>\\n                                        </div>\\n                                        <span *ngIf=\\\"formValidate&&!skuSelection\\\" class=\\\" text-danger \\\">Please\\n                                            enter valid SKU code</span>\\n                                    </div>\\n                                </div>\\n                                <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\">Submit</button>\\n                                <button mat-raised-button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"gotoHomePage()\\\">Cancel</button>\\n                            </div>\\n                        </form>\\n\\n\\n\\n                        <form [formGroup]=\\\"updateSKUForm\\\" method=\\\"post\\\" *ngIf=\\\"skuDetails\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput type=\\\"text\\\" [formControl]=\\\"this.skucode\\\" [(ngModel)]=\\\"skuObj.skuCode\\\"\\n                                            readonly>\\n                                        <mat-placeholder class=\\\"placeholder\\\">SKU code</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.skucode.hasError('required') &&formValidate \\\" class=\\\"text-danger\\\">Please\\n                                        enter SKU code</span>\\n                                </div>\\n\\n                                <div class=\\\"col-md-6\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput type=\\\"text\\\" [formControl]=\\\"this.productName\\\" [(ngModel)]=\\\"skuObj.productName\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Product Name</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.productName.hasError('required') &&formValidate \\\" class=\\\" text-danger \\\">Please\\n                                        enter product name</span>\\n                                    <span *ngIf=\\\"this.productName.hasError('maxlength')\\\" class=\\\"text-danger\\\">Please\\n                                        enter product name with 100 letters only</span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput type=\\\"number\\\" [formControl]=\\\"this.threshold\\\" [(ngModel)]=\\\"skuObj.thresholdLevel\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Threshold Level</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.threshold.hasError('required') &&formValidate \\\" class=\\\" text-danger \\\">Please\\n                                        enter\\n                                        threshold level</span>\\n                                    <span *ngIf=\\\"this.threshold.hasError('maxlength') ||this.threshold.hasError('pattern') \\\"\\n                                        class=\\\"text-danger\\\">Please enter valid threshold level between 1-999 only\\n                                    </span>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-12\\\">\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <textarea matInput [formControl]=\\\"this.descrption\\\" [(ngModel)]=\\\"skuObj.description\\\"></textarea>\\n                                        <mat-placeholder class=\\\"placeholder\\\">Description</mat-placeholder>\\n                                    </mat-form-field>\\n                                    <span *ngIf=\\\"this.descrption.hasError('required') &&formValidate \\\" class=\\\"text-danger \\\">Please\\n                                        enter description</span>\\n                                    <span *ngIf=\\\"this.descrption.hasError('maxlength')\\\" class=\\\"text-danger\\\">Please\\n                                        enter only 200 letters only</span>\\n                                </div>\\n                            </div>\\n\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"updateSkuDetails()\\\">Update</button>\\n                            <button mat-raised-button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"gotoHomePage()\\\">Cancel</button>\\n                            <div class=\\\"clearfix\\\"></div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { PlatformLocation } from '@angular/common'\nimport { AppService } from '../../app.service';\nimport { MatDialog } from '@angular/material';\n\n\n@Component({\n    selector: 'app-update-sku-management',\n    templateUrl: './update-sku-management.component.html',\n    styleUrls: ['./update-sku-management.component.css']\n})\nexport class UpdateSkuManagementComponent implements OnInit {\n\n    @ViewChild(\"updateForm\") formUpdate: any;\n\n\n    private skuCodeList;\n    public updateSKUForm: FormGroup;\n    public skuObj: any = {}\n    formValidate: boolean;\n    successResponse;\n    errorResponse;\n    skuDetails = false;\n\n    skuValue;\n    submitted = true;\n\n    public skucode: AbstractControl;\n    public productName: AbstractControl;\n    public inventoryConditionId: AbstractControl;\n    public descrption: AbstractControl;\n    public threshold: AbstractControl;\n\n\n    constructor(\n        public dialog: MatDialog,\n        public _appService: AppService,\n        private readonly route: ActivatedRoute,\n        public platformLocation: PlatformLocation,\n        private readonly fb: FormBuilder,\n        private readonly router: Router) {\n        this.updateSKUForm = this.fb.group({\n            SKUCODE: [null, [Validators.required]],\n            PROD_NAME: [null, [Validators.required, Validators.maxLength(100)]],\n            DESCRIPTION: [null, [Validators.required, Validators.maxLength(200)]],\n            THRESHOLD: [null, [Validators.required, Validators.maxLength(3), Validators.pattern('^([1-9][0-9]{0,2})$')]]\n        })\n        this.skucode = this.updateSKUForm.controls['SKUCODE'];\n        this.productName = this.updateSKUForm.controls['PROD_NAME'];\n        this.descrption = this.updateSKUForm.controls['DESCRIPTION'];\n        this.threshold = this.updateSKUForm.controls['THRESHOLD'];\n    }\n\n\n    getSkuDetails() {\n        if (this.formUpdate.valid && this.skuSelection) {\n            this._appService.getDetailsBySkuId(this.skuValue).subscribe((data: any) => {\n                if (data.data != null) {\n                    this.skuDetails = true;\n                    this.skuObj = data.data;\n                    this.formValidate = false;\n\n                } else {\n                    this.openDialog(\"No details added for this SKU\")\n                }\n            })\n        }\n        else{\n            this.formValidate=true\n        }\n    }\n\n    ngOnInit() {\n        /**\n     * Back Button event trigger\n     */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n        this.getAllSkuCodes()\n    }\n\n    getAllSkuCodes() {\n        this._appService.getAllSkuCodes().subscribe(data => {\n            const resData: any = data;\n            this.skuCodeList = resData.data;\n        })\n    }\n\n    updateSkuDetails() {\n        if (this.updateSKUForm.valid) {\n            this.skuObj.createdTime = new Date();\n            this._appService.updateSku(this.skuObj).subscribe((data: any) => {\n                if (data.data != null) {\n                    this.openDialog('SKU details updated successfully')\n                    this.updateSKUForm.reset();\n                    setTimeout(() => {\n                        this.skuObj = {}\n                    }, 500)\n\n                } else {\n                    this.openDialog(data.error.message)\n                }\n            })\n        } else {\n            this.formValidate = true;\n        }\n    }\n\n    gotoHomePage() {\n            this.router.navigate(['./inventory'])\n    }\n\n    openDialog(msgText) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', msgText)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.router.navigate(['./inventory'])\n            }\n        });\n    }\n\n    filteredSkusList: any = [];\n    skuSelection = false;\n    getSKUSbasedonSearch() {\n        this.skuSelection = false;\n        this.filteredSkusList = [];\n        if (this.skuValue) {\n            this.skuCodeList.find((data) => {\n                if ((data.skuCode + \"\").includes(this.skuValue) || (data.productName.toLowerCase()).includes(this.skuValue.toLowerCase())) {\n                    this.filteredSkusList.push(data)\n                }\n            })\n        }\n    }\n\n    selectSKU(obj) {\n        this.skuSelection = true;\n        this.skuValue = obj.skuCode;\n        this.filteredSkusList = [];\n    }\n\n}\n\n\n\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UpdateSkuManagementComponent, DialogComponent } from './update-sku-management.component';\n\nimport {\n  MatButtonModule,\n  MatInputModule,\n  MatRippleModule,\n  MatFormFieldModule,\n  MatTooltipModule,\n  MatSelectModule,\n  MatDialogModule,\n  MatIconModule\n} from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateSkuManagementComponent\n  },\n]\n\n\n@NgModule({\n  imports: [\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    RouterModule.forChild(routes),\n  ],\n  declarations: [UpdateSkuManagementComponent, DialogComponent],\n  providers: [],\n  entryComponents: [DialogComponent]\n})\nexport class UpdateSkuManagementModule { }\n"],"sourceRoot":""}