{"version":3,"sources":["webpack:///./src/app/+dispatch/+dispatch-view/dispatch-view.component.html","webpack:///./src/app/+dispatch/+dispatch-view/dispatch-view.component.ts","webpack:///./src/app/+dispatch/+dispatch-view/dispatch-view.module.ts"],"names":[],"mappings":"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","file":"dispatch-view-dispatch-view-module.js","sourcesContent":["module.exports = \"\\n<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\" style=\\\"padding:0px;margin:0px\\\">\\n        <div class=\\\"row scan-btn\\\">\\n            <div class=\\\"col-sm-4\\\"></div>\\n            <div class=\\\"col-sm-4 col-xs-4 col-md-4 col-12\\\">\\n                <button class=\\\"btn btn-info btn-block btn-fill\\\" (click)=\\\"getProductDetails()\\\"> Scan </button>\\n            </div>\\n            <div class=\\\"col-sm-4\\\"></div>\\n        </div>\\n        <br><br>\\n        <div class=\\\"row\\\" *ngIf=\\\"productInfo\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Product Details</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\" style=\\\"padding-top:13px;padding-left:11px;padding-right:0px\\\">\\n                        <div class=\\\"row\\\">\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                <b>QR Code</b>\\n                            </p>\\n                            <p class=\\\"col-sm-1 col-md-1 col-1\\\">:</p>\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                {{productInfo.barcode}}\\n                            </p>\\n                           \\n                           \\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                <b> Invoice </b>\\n                            </p>\\n                            <p class=\\\"col-sm-1 col-md-1 col-1\\\">:</p>\\n\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                {{productInfo.invoiceId}}\\n                            </p>\\n\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                <b> Created By</b>\\n                            </p>\\n                            <p class=\\\"col-sm-1 col-md-1 col-1\\\">:</p>\\n\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                {{productInfo.createdUser}}\\n                            </p>\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                <b>Date</b>\\n                            </p>\\n                            <p class=\\\"col-sm-1 col-md-1 col-1\\\">:</p>\\n\\n                            <p class=\\\"col-sm-5 col-md-5 col-5\\\">\\n                                {{productInfo.createdTime|date}}\\n                            </p>\\n                        </div>\\n                    </div>\\n                </div>\\n                <button class=\\\"btn btn-info btn-block btn-fill\\\" (click)=\\\"addToDispatch()\\\"> DISPATCH </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { QRCodeScanner } from '../../+qrcode-scanner/qrcode-scanner.service';\nimport { ActivatedRoute, Params,Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, AbstractControl, FormBuilder, Validators } from '@angular/forms';\n\nimport { MatDialog } from '@angular/material';\n\n@Component({\n    selector: 'dispatch-view',\n    templateUrl: 'dispatch-view.component.html',\n    styles: [\n        `\n        md-checkbox .md-icon {\n    background: red;\n}\nmd-checkbox.md-default-theme.md-checked .md-icon {\n    background: orange;\n}\n.mat-focused .placeholder {    \n    color: #AAAAAA;\n    }\n  .placeholder {\n     color:#AAAAAA;\n    }\n        \n        `\n    ]\n})\n\nexport class DispatchViewComponent implements OnInit {\n\n    constructor(\n        public dialog: MatDialog,\n        public _qrScanner: QRCodeScanner,\n        public _appService: AppService,\n        public _router: Router\n    ) {\n\n    }\n\n\n    ngOnInit() {\n        /**\n        * Back Button event trigger\n        */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n    }\n\n    productInfo: any;\n    inventoryProductInfo: any;\n    resultQrcode: any;\n    getProductDetails() {\n\n        this._qrScanner.promiseScan().then(result => {\n            this.resultQrcode = result;\n            if (!this.resultQrcode.cancelled) {\n                this._appService.dataFromUnicommerce(this.resultQrcode.text).subscribe((data: any) => {\n                    if (data.data != null) {\n                        this.productInfo = data.data;\n                    } else {\n                        this.openDialog('Before dispatch add Manifest')\n                    }\n                })\n            } else {\n                this.goToHomePage()\n            }\n        })\n    }\n\n    addToDispatch() {\n        this._appService.addToDispatch(this.productInfo).subscribe((data: any) => {\n            if (data.data != null) {\n                this.openDialog('Dispatched product successfully')\n            } else {\n                this.openDialog('data.error.message')\n                //this.openDialog(data.error.message)\n            }\n        })\n    }\n\n\n    openDialog(msgText) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', msgText)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.goToHomePage();\n            }\n        });\n    }\n\n    goToHomePage() {\n        this._router.navigate(['./dispatch'])\n    }\n}\n\n\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DispatchViewComponent, DialogComponent } from './dispatch-view.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport {SharedModule} from '../../shared.module'\n\nimport {\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DispatchViewComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatIconModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatSelectModule,\n        CommonModule,\n        MatDialogModule,\n        SharedModule,\n        [RouterModule.forChild(routes)],\n        FormsModule, \n         ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n    ],\n    declarations: [DispatchViewComponent, DialogComponent],\n    providers: [\n\n    ],\n    entryComponents: [DialogComponent]\n})\nexport class DispatchViewModule { }\n"],"sourceRoot":""}