{"version":3,"sources":["webpack:///./src/app/+qr-management/generate/generate.component.css","webpack:///./src/app/+qr-management/generate/generate.component.html","webpack:///./src/app/+qr-management/generate/generate.component.ts","webpack:///./src/app/+qr-management/generate/generate.module.ts"],"names":[],"mappings":"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","file":"generate-generate-module.js","sourcesContent":["module.exports = \".mat-focused .placeholder {    \\n  color: #AAAAAA;\\n  }\\n.placeholder {\\n   color:#AAAAAA;\\n  }\\n.img1\\n  {\\n    height: 120px;\\n  }\\n/* ::-webkit-scrollbar-thumb {\\n    background: grey;\\n    border-radius: 10px;\\n    } */\\n.height-skus{\\n    max-height: 100px;\\n    overflow-y: scroll;\\n    overflow-x: hidden;\\n    display: block;\\n    }\\n.ui-overlay-c {\\n            background-color: rgba(0, 0, 0, 0.5);\\n            position: fixed;\\n            width: 100%;\\n            height: 100%;\\n            top: 0;\\n            left: 0;\\n            text-align: center;\\n        }\\n.loading {\\n          position: absolute;\\n          top: 50%;\\n          left: 50%;\\n        }\\n.loading-bar {\\n         \\n          display: inline-block;\\n          width: 4px;\\n          height: 18px;\\n          border-radius: 4px;\\n          -webkit-animation: loading 1s ease-in-out infinite;\\n                  animation: loading 1s ease-in-out infinite;\\n        }\\n.loading-bar:nth-child(1) {\\n          background-color: #3498db;\\n          -webkit-animation-delay: 0;\\n                  animation-delay: 0;\\n        }\\n.loading-bar:nth-child(2) {\\n          background-color: #c0392b;\\n          -webkit-animation-delay: 0.09s;\\n                  animation-delay: 0.09s;\\n        }\\n.loading-bar:nth-child(3) {\\n          background-color: #f1c40f;\\n          -webkit-animation-delay: .18s;\\n                  animation-delay: .18s;\\n        }\\n.loading-bar:nth-child(4) {\\n          background-color: #27ae60;\\n          -webkit-animation-delay: .27s;\\n                  animation-delay: .27s;\\n        }\\n@-webkit-keyframes loading {\\n          0% {\\n            -webkit-transform: scale(1);\\n                    transform: scale(1);\\n          }\\n          20% {\\n            -webkit-transform: scale(1, 2.2);\\n                    transform: scale(1, 2.2);\\n          }\\n          40% {\\n            -webkit-transform: scale(1);\\n                    transform: scale(1);\\n          }\\n        }\\n@keyframes loading {\\n          0% {\\n            -webkit-transform: scale(1);\\n                    transform: scale(1);\\n          }\\n          20% {\\n            -webkit-transform: scale(1, 2.2);\\n                    transform: scale(1, 2.2);\\n          }\\n          40% {\\n            -webkit-transform: scale(1);\\n                    transform: scale(1);\\n          }\\n        }\\nmd-checkbox .md-icon {\\n    background: red;\\n}\\nmd-checkbox.md-default-theme.md-checked .md-icon {\\n    background: orange;\\n}\\n.mat-focused .placeholder {    \\n    color: #AAAAAA;\\n    }\\n.placeholder {\\n     color:#AAAAAA;\\n    }\"","module.exports = \"<div class=\\\"main-content\\\" style=\\\"padding:30px 1px\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-header card-header-info\\\">\\n                <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Generate QRCodes</h4>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n\\n                <form [formGroup]=\\\"generateSKUForm\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <mat-form-field class=\\\"example-full-width\\\">\\n                                <input matInput [formControl]=\\\"this.skucode\\\" [(ngModel)]=\\\"generateObj.purchaseOrderNumber\\\" (keyup)=\\\"getPOSbasedonSearch()\\\"\\n                                    autocomplete=\\\"off\\\">\\n                                <mat-placeholder class=\\\"placeholder\\\">P.O Number</mat-placeholder>\\n                            </mat-form-field>\\n\\n                            <div class=\\\"height-skus\\\">\\n                                <div *ngFor=\\\"let key of filteredPOSList\\\" (click)=\\\"selectPO(key)\\\" style=\\\"border-bottom:1px solid #AAAAAA;padding: 3px\\\">\\n                                    {{key.purchaseOrderNumber}} </div>\\n                            </div>\\n                            <span *ngIf=\\\"formValidate&&!poSelection\\\" class=\\\" text-danger \\\">Please select P.O Number</span>\\n                        </div>\\n                    </div>\\n\\n                    <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"getSKUSBasedOnPO()\\\" *ngIf=\\\"posList.length>0\\\">Get SKUS</button>\\n                    <button mat-raised-button class=\\\"btn btn-danger pull-right\\\" (click)=\\\"gotoPreviousPage()\\\">Cancel</button>\\n                    <div class=\\\"clearfix\\\"></div>\\n                </form>\\n            </div>\\n            <div class=\\\"card-body\\\" *ngIf=\\\"posList.length==0\\\">\\n                P.O's not available to generate QR Codes\\n            </div>\\n        </div>\\n        <div *ngFor=\\\"let sku of skuListPo\\\">\\n            <mat-accordion>\\n                <mat-expansion-panel style=\\\"border-left: 2px solid #26c6da;margin-bottom:8px\\\">\\n                    <mat-expansion-panel-header>\\n                        <mat-panel-title>\\n                            <b>{{sku.itemName}}</b>\\n                        </mat-panel-title>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-6\\\"><b>SKU : </b></div>\\n                        <div class=\\\"col-6\\\">{{sku.skuCode}}</div>\\n                        <div class=\\\"col-6\\\"><b>Quantity : </b></div>\\n                        <div class=\\\"col-6\\\">{{sku.quantity}}</div>\\n                    </div>\\n                    <!--<button mat-raised-button color=\\\"warn\\\" class=\\\"pull-right\\\" (click)=\\\"GenerateQRcodes(sku)\\\">Print</button>-->\\n                </mat-expansion-panel>\\n            </mat-accordion>\\n        </div>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"getQRsBasedOnPo()\\\" *ngIf=\\\"skuListPo?.length\\\"\\n            [disabled]=\\\"loaderBtn\\\">Get\\n            All QR Codes</button>\\n    </div>\\n    <div *ngIf=\\\"loaderBtn\\\">\\n        <div class=\\\"ui-overlay-c\\\">\\n            <div class=\\\"loading\\\" style=\\\" margin: 0;\\n                                        position: absolute;\\n                                        top: 50%;\\n                                        left: 50%;\\n                                        transform: translate(-50%, -50%);\\\">\\n                <div class=\\\"loading-bar\\\"></div>\\n                <div class=\\\"loading-bar\\\"></div>\\n                <div class=\\\"loading-bar\\\"></div>\\n                <div class=\\\"loading-bar\\\"></div>\\n                <h4 style=\\\"color: #e0dcd4\\\">Loading....</h4>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AppService } from '../../app.service';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'generate-QR',\n    templateUrl: './generate.component.html',\n    styleUrls: ['./generate.component.css']\n})\n\nexport class GenerateQrComponent {\n\n    public generateSKUForm: FormGroup;\n    formValidate: boolean;\n\n    public skucode: AbstractControl;\n    public noofProducts: AbstractControl;\n    successMsg = 'QR Codes generated successfully'\n    errorMsg = 'Failed to Generate QR Codes'\n\n\n    skuCodeList: any;\n    generateObj: any = {};\n    constructor(\n        public dialog: MatDialog,\n        private readonly router: Router,\n        public appService: AppService,\n        private readonly fb: FormBuilder,\n\n    ) {\n        this.generateSKUForm = this.fb.group({\n            SKUCODE: [null, [Validators.required]],\n            NO_OF_PROD: [null, [Validators.required, Validators.pattern('^([1-9][0-9]{0,2})$')]],\n\n        })\n        this.skucode = this.generateSKUForm.controls['SKUCODE'];\n        this.noofProducts = this.generateSKUForm.controls['NO_OF_PROD'];\n\n    }\n\n    ngOnInit() {\n        /**\n       * Back Button event trigger\n       */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n        this.getAllPos()\n    }\n\n    posList: any = [];\n    getAllPos() {\n        this.appService.getAllPovendorbyStatus(0).subscribe((data: any) => {\n            this.posList = data.data;\n        })\n    }\n\n    filteredPOSList: any = [];\n    getPOSbasedonSearch() {\n        this.poSelection = false;\n        this.filteredPOSList = [];\n        this.skuListPo = [];\n        if (this.generateObj.purchaseOrderNumber) {\n            this.posList.find((data) => {\n                if ((data.purchaseOrderNumber.toLowerCase()).includes(this.generateObj.purchaseOrderNumber.toLowerCase())) {\n                    this.filteredPOSList.push(data)\n                }\n            })\n        }\n    }\n\n    poSelection = false;\n    selectPO(obj) {\n        this.poSelection = true;\n        this.generateObj.purchaseOrderNumber = obj.purchaseOrderNumber;\n        this.filteredPOSList = [];\n    }\n\n    skuListPo: any = []\n    getSKUSBasedOnPO() {\n        if (this.poSelection) {\n            this.appService.getSKUSBasedonPO(this.generateObj.purchaseOrderNumber).subscribe((data: any) => {\n                this.skuListPo = data.data;\n            })\n        } else {\n            this.formValidate = true\n        }\n    }\n\n    loaderBtn = false;\n    getQRsBasedOnPo() {\n        this.loaderBtn = true;\n        this.appService.getQRBasedOnPo(this.generateObj.purchaseOrderNumber).subscribe((data: any) => {\n            this.loaderBtn = false;\n            if (data.data != null) {\n                this.openDialog(this.successMsg)\n            } else {\n                this.openDialog(data.error.message)\n            }\n        })\n    }\n\n\n    /**\n     ** Barcodes generation\n    */\n    GenerateQRcodes(skuObj) {\n        this.appService.GenerateQRcodes(skuObj.skuCode, skuObj.quantity).subscribe(data => {\n            const qrRes: any = data;\n            if (qrRes.data != null) {\n                this.openDialog(this.successMsg)\n            } else {\n                this.openDialog(this.errorMsg)\n            }\n        })\n    }\n\n\n    openDialog(text) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', text)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.gotoPreviousPage()\n            }\n        });\n    }\n\n\n    gotoPreviousPage() {\n        this.generateSKUForm.reset();\n        setTimeout(() => {\n            this.router.navigate(['./inventory'])\n        })\n    }\n\n}\n\n\n\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    constructor(\n        public dialogRef: MatDialogRef<DialogComponent>) { }\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GenerateQrComponent, DialogComponent } from '../generate/generate.component';\n\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport {\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n\n    MatDialogModule,\n    MatIconModule\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: GenerateQrComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatIconModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatExpansionModule,\n        MatSelectModule,\n        CommonModule,\n        MatDialogModule,\n        [RouterModule.forChild(routes)],\n        FormsModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' })\n    ],\n    declarations: [GenerateQrComponent, DialogComponent],\n    providers: [\n\n    ],\n    entryComponents: [DialogComponent]\n})\nexport class GenerateQrModule { }\n"],"sourceRoot":""}