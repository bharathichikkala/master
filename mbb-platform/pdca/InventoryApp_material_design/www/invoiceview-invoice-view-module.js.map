{"version":3,"sources":["webpack:///./src/app/+dispatch/+invoiceview/invoice-view.component.html","webpack:///./src/app/+dispatch/+invoiceview/invoice-view.component.ts","webpack:///./src/app/+dispatch/+invoiceview/invoice-view.module.ts"],"names":[],"mappings":"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","file":"invoiceview-invoice-view-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div>\\n                    <!-- <span *ngIf=\\\"errorMessage\\\" style=\\\"text-align:center\\\"  class=\\\"text-danger\\\">{{errorMessage}}</span> -->\\n\\n                    <div>\\n                        <form>\\n\\n                            <div *ngFor=\\\"let item of productArray;let i=index\\\">\\n                                <div class=\\\"card\\\" [ngStyle]=\\\"{'background':!item.cardStatus ? 'none': '#fff','box-shadow':!item.cardStatus ? 'none': '0 1px 4px 0 rgba(0, 0, 0, 0.14)'}\\\">\\n                                    <div class=\\\"card-header card-header-info\\\">\\n                                        <div>\\n                                            <h4 class=\\\"card-title\\\" style=\\\"text-align:center;display: inline; cursor: pointer;\\\"\\n                                                (click)=\\\"expand(i)\\\">{{item.barcode}}</h4>\\n                                            <span style=\\\"float: right;cursor: pointer;\\\" (click)=\\\"delete(i)\\\">\\n                                                <mat-icon>delete</mat-icon>\\n                                            </span>\\n                                            <span style=\\\"float: right;cursor: pointer;\\\" (click)=\\\"expand(i)\\\">\\n                                                <mat-icon>remove_red_eye</mat-icon>\\n                                            </span>\\n\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"card-body\\\" *ngIf=\\\"item.cardStatus\\\">\\n\\n                                        <div *ngIf=\\\"item.cardStatus\\\">\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-md-6\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <input matInput placeholder=\\\"QR Code\\\" name=\\\"barcode\\\"\\n                                                            [(ngModel)]=\\\"item.barcode\\\" type=\\\"text\\\" readonly\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                    </mat-form-field>\\n                                                </div>\\n                                                <div class=\\\"col-md-6\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <input matInput placeholder=\\\"SKU Code\\\" type=\\\"text\\\" name=\\\"skucode\\\"\\n                                                            [(ngModel)]=\\\"item.inventoryId.skuCode\\\" readonly\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                    </mat-form-field>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-md-12\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <input matInput placeholder=\\\"Product Name\\\" type=\\\"text\\\" name=\\\"productName\\\"\\n                                                            [(ngModel)]=\\\"item.inventoryId.productName\\\" readonly\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                    </mat-form-field>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-md-12\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <input matInput placeholder=\\\"Facility\\\" type=\\\"text\\\" name=\\\"facility\\\"\\n                                                            [(ngModel)]=\\\"item.facilityId.facility\\\" readonly\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                    </mat-form-field>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-md-12\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <input matInput placeholder=\\\"P.O Number\\\" type=\\\"text\\\" name=\\\"poNumber\\\"\\n                                                            [(ngModel)]=\\\"item.poVendorId.purchaseOrderNumber\\\" readonly\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                    </mat-form-field>\\n                                                </div>\\n                                            </div>\\n\\n                                            <div class=\\\"row\\\" *ngIf=\\\"item.serialNumber !=null\\\">\\n                                                <div class=\\\"col-md-12\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <input matInput placeholder=\\\"Serial Number\\\" type=\\\"text\\\" name=\\\"serialNumber\\\"\\n                                                            [(ngModel)]=\\\"item.serialNumber\\\" readonly\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                    </mat-form-field>\\n                                                </div>\\n                                            </div>\\n\\n\\n                                            <!--                                             \\n                                                  <mat-slide-toggle>\\n                                                    Slide me!\\n                                                  </mat-slide-toggle> -->\\n\\n\\n\\n                                            <div>\\n                                                <div class=\\\"row\\\" style=\\\"margin-top:1px\\\">\\n                                                    <div class=\\\"col-sm-6 col-xs-12\\\" *ngFor=\\\"let data of item.check;let j=index\\\">\\n                                                        <div class=\\\"row\\\">\\n                                                            <mat-slide-toggle class=\\\"primary col-sm-6 col-xs-12\\\"\\n                                                                [(ngModel)]=\\\"data.conditionCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                                (ngModelChange)=\\\"onChange(i,j)\\\">\\n\\n\\n                                                                <input matInput type=\\\"number\\\" style=\\\"border:1px solid #AAAAAA; width:20%; border-top: 2px solid #AAAAAA;text-align:center;width:31px\\\"\\n                                                                    value={{data.quantity}} [(ngModel)]=\\\"data.quantity\\\"\\n                                                                    [disabled]=\\\"!data.conditionCheck\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                                    required pattern=\\\"^(?:[1-9]|0[1-9]|10)$\\\" #quant=\\\"ngModel\\\">\\n                                                                {{data.accessory}}\\n                                                            </mat-slide-toggle>\\n                                                            <div>\\n                                                                <span *ngIf=\\\"quant.errors && quant.errors.required\\\"\\n                                                                    class=\\\" text-danger\\\">\\n                                                                    Please enter quantity</span>\\n                                                                <span *ngIf=\\\"quant.errors && quant.errors.pattern\\\"\\n                                                                    class=\\\" text-danger\\\">\\n                                                                    Please enter only 1-10 numbers</span>\\n                                                            </div>\\n\\n\\n\\n                                                        </div>\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n\\n\\n\\n                                            <!-- <div *ngIf=\\\"checkList.length>0\\\">\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-sm-6 col-xs-12\\\" formArrayName=\\\"items\\\" *ngFor=\\\"let item of dispatchForm.get('items').controls ; let i = index;\\\">\\n                                                    <div class=\\\"row\\\" [formGroupName]=\\\"i\\\">\\n                                                        <mat-checkbox class=\\\"primary col-sm-6 col-xs-12\\\" formControlName=\\\"conditionCheck\\\"\\n                                                            name=\\\"checkbox\\\" value=\\\"{{dispatchForm.controls.items.controls[i].controls.conditionCheck.value}}\\\"\\n                                                            (selectionChange)=\\\"onChange(i)\\\">\\n                                                            <input matInput type=\\\"number\\\" [attr.disabled]=\\\"dispatchForm.controls.items.controls[i].controls.conditionCheck.value ? null :true\\\"\\n                                                                [value]=\\\"dispatchForm.controls.items.controls[i].controls.conditionCheck.value ?  \\n                                                        dispatchForm.controls.items.controls[i].controls.quantity.value : 0\\\"\\n                                                                formControlName=\\\"quantity\\\" style=\\\"border:1px solid #AAAAAA;text-align:center;width:31px\\\">\\n                                                            {{dispatchForm.controls.items.controls[i].controls.accessory.value}}\\n                                                        </mat-checkbox>\\n            \\n                                                        <div *ngIf=\\\"dispatchForm.controls.items.controls[i].controls.conditionCheck.value\\\">\\n                                                            <span *ngIf=\\\"item.get('quantity').hasError('required') && formValidate \\\"\\n                                                                class=\\\" text-danger\\\">Please enter quantity</span>\\n                                                            <span *ngIf=\\\"item.get('quantity').hasError('pattern') \\\" class=\\\" text-danger\\\">\\n                                                                Please enter only 1-10 numbers</span>\\n                                                        </div>\\n            \\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div> -->\\n\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                            </div>\\n\\n\\n\\n\\n                            <div class=\\\"card\\\">\\n                                <div class=\\\"card-body\\\">\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-12\\\">\\n                                            <mat-form-field class=\\\"example-full-width\\\">\\n                                                <input matInput placeholder=\\\"Invoice ID\\\" type=\\\"text\\\" name=\\\"invoiceId\\\"\\n                                                    [(ngModel)]=\\\"invoiceId\\\" readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-12\\\">\\n                                            <mat-form-field>\\n                                                <label>Expected Delivery Days</label>\\n                                                <mat-select matInput [(ngModel)]=\\\"expectedDeliveryDates\\\"\\n                                                    [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                                    <mat-option *ngFor=\\\"let item of deliveryDateslist\\\" [value]=\\\"item\\\">{{item}}</mat-option>\\n                                                </mat-select>\\n                                            </mat-form-field>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-md-12\\\">\\n                                            <mat-form-field class=\\\"example-full-width\\\">\\n                                                <textarea matInput [(ngModel)]=\\\"comment\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                    required></textarea>\\n                                                <mat-placeholder class=\\\"placeholder\\\">Comments</mat-placeholder>\\n                                            </mat-form-field>\\n                                            <span *ngIf=\\\"formValidate && (comment==null || comment=='')\\\" class=\\\" text-danger\\\">please\\n                                                enter comments</span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                        </form>\\n\\n                        <div>\\n                            <div *ngIf=\\\"loaderBtn\\\">\\n\\n                                <div class=\\\"ui-overlay-c\\\">\\n                                    <div class=\\\"loading\\\" style=\\\" margin: 0;\\n                                        position: absolute;\\n                                        top: 50%;\\n                                        left: 50%;\\n                                        transform: translate(-50%, -50%);\\\">\\n                                        <div class=\\\"loading-bar\\\"></div>\\n                                        <div class=\\\"loading-bar\\\"></div>\\n                                        <div class=\\\"loading-bar\\\"></div>\\n                                        <div class=\\\"loading-bar\\\"></div>\\n                                        <h4 style=\\\"color: #e0dcd4\\\">Loading....</h4>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n<div class=\\\" footer-copyright\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <button *ngIf=\\\"!(productArray.length < noofProducts)\\\" [disabled]=\\\"loaderBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\"\\n                    style=\\\" bottom: 0;\\\" (click)=\\\"addtoDispatch()\\\">Dispatch</button>\\n                <button *ngIf=\\\"productArray.length < noofProducts\\\" mat-raised-button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\"\\n                    (click)=\\\"addNextProduct()\\\">\\n                    Next\\n                </button>\\n                <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger pull-right\\\" [disabled]=\\\"loaderBtn\\\" style=\\\" bottom: 0;\\\" (click)=\\\"gotoPreviousPage()\\\">cancel\\n                </button>\\n\\n            </div>\\n        </div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { QRCodeScanner } from '../../+qrcode-scanner/qrcode-scanner.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { FormGroup, FormControl, FormArray, AbstractControl, FormBuilder, Validators } from '@angular/forms';\n\nimport { MatDialog } from '@angular/material';\n\n@Component({\n    selector: 'dispatch-invoice-view',\n    templateUrl: 'invoice-view.component.html',\n    styles: [\n        `\n        .ui-overlay-c {\n            background-color: rgba(0, 0, 0, 0.5);\n            position: fixed;\n            width: 100%;\n            height: 100%;\n            top: 0;\n            left: 0;\n            text-align: center;\n        }\n        .loading {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n        }\n        .loading-bar {\n         \n          display: inline-block;\n          width: 4px;\n          height: 18px;\n          border-radius: 4px;\n          animation: loading 1s ease-in-out infinite;\n        }\n        .loading-bar:nth-child(1) {\n          background-color: #3498db;\n          animation-delay: 0;\n        }\n        .loading-bar:nth-child(2) {\n          background-color: #c0392b;\n          animation-delay: 0.09s;\n        }\n        .loading-bar:nth-child(3) {\n          background-color: #f1c40f;\n          animation-delay: .18s;\n        }\n        .loading-bar:nth-child(4) {\n          background-color: #27ae60;\n          animation-delay: .27s;\n        }\n        \n        @keyframes loading {\n          0% {\n            transform: scale(1);\n          }\n          20% {\n            transform: scale(1, 2.2);\n          }\n          40% {\n            transform: scale(1);\n          }\n        }\n        md-checkbox .md-icon {\n    background: red;\n}\nmd-checkbox.md-default-theme.md-checked .md-icon {\n    background: orange;\n}\n.mat-focused .placeholder {    \n    color: #AAAAAA;\n    }\n  .placeholder {\n     color:#AAAAAA;\n    }\n        \n        `\n    ]\n})\n\nexport class InvoiceViewComponent implements OnInit {\n\n    productData: any = { comment: null, expectedDeliveryDates: null }\n    productArray: any = []\n    public formValidate = false;\n    public dispatchForm: FormGroup;\n    resultQrcode: any;\n    checkList: any = []\n    invoiceId;\n    comment;\n    deliveryDateslist: any = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    expectedDeliveryDates: any = 4\n    noofProducts: any;\n\n\n    constructor(\n        private readonly fb: FormBuilder,\n        public dialog: MatDialog,\n        private readonly _appService: AppService,\n        private readonly _qrScanner: QRCodeScanner,\n        private readonly router: Router,\n        private readonly route: ActivatedRoute,\n    ) { }\n    facility: any; receivedBy: any = ''; imageId: any = '';\n    ngOnInit() {\n        /**\n      * Back Button event trigger\n      */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n        this.facility = JSON.parse(localStorage.getItem('facility'));\n        this.invoiceId = localStorage.getItem(\"invoiceId\")\n        this.getDetailsByQrcodeId(localStorage.getItem('QRCode'));\n        this.noofProducts = localStorage.getItem('noofProducts')\n        this.receivedBy = localStorage.getItem('receivedBy');\n        this.imageId = localStorage.getItem('imageId');\n    }\n\n    barcodes: any = [];\n    getDetailsByQrcodeId(id) {\n        if (localStorage.getItem('dispatchType') != '3') {\n            this._appService.checkingBarcode(id, this.facility.id).subscribe((data: any) => {\n                if (data.data != null) {\n                    this.productData = data.data;\n                    this.productData.cardStatus = true\n                    this.productData.expectedDeliveryDates = 4\n                    this.getChecklistData()\n                }\n                else {\n                    this.openDialog(data.error.message)\n                }\n            })\n        }\n        this.barcodes.push(id)\n        if (localStorage.getItem('dispatchType') == '3') {\n            this._appService.barcodeCheckForRental(localStorage.getItem('invoiceId'), this.barcodes).subscribe((data: any) => {\n                if (data.error == null) {\n                    this._appService.checkingBarcode(id, this.facility.id).subscribe((data: any) => {\n                        if (data.data != null) {\n                            this.productData = data.data;\n                            this.productData.cardStatus = true\n                            this.productData.expectedDeliveryDates = 4\n                            this.getChecklistData()\n                        }\n                        else {\n                            this.openDialog(data.error.message)\n                        }\n                    })\n                } else {\n                    this.loaderBtn = false;\n                    this.openDialog(data.error.message)\n                }\n            })\n        }\n    }\n\n    getChecklistData() {\n        this._appService.getCheckListBySKu(this.productData.inventoryId.skuCode).subscribe((data: any) => {\n            if (data.data != null) {\n                const detailRes: any = data.data;\n                const details = []\n                for (const i of detailRes) {\n                    details.push({\n                        id: i.id,\n                        skuCode: i.skuCode,\n                        accessory: i.accessory,\n                        quantity: i.quantity,\n                        conditionCheck: i.conditionCheck,\n                    })\n                }\n                this.checkList = details\n                if (this.checkList.length > 0) {\n                    this.productData.check = this.checkList\n                }\n                this.productArray.push(this.productData)\n            }\n            else {\n                this.openDialog(data.error.message)\n            }\n        })\n    }\n\n    addNextProduct(): void {\n        if (this.productArray.length < this.noofProducts && this.comment != null && this.comment != \"\") {\n            this._qrScanner.promiseScan().then(result => {\n                this.resultQrcode = result;\n                if (!this.resultQrcode.cancelled) {\n                    for (let i = 0; i < this.productArray.length; i++) {\n                        this.productArray[i].cardStatus = false;\n                    }\n                    this._appService.checkingBarcode(this.resultQrcode.text, this.facility.id).subscribe((data) => {\n                        const response: any = data;\n                        if (response.data != null) {\n\n                            const barcodeStatus = this.productArray.find(obj => obj.barcode === response.data.barcode);\n                            if (!barcodeStatus) {\n                                const facilityStatus = this.productArray.find(obj => obj.facilityId.facility === response.data.facilityId.facility);\n                                if (facilityStatus) {\n                                    this.productData = response.data;\n                                    //  this.productData.cardStatus=true\n                                    this.getNextChecklistData()\n                                } else {\n                                    this.openDialogadd('Products should be in same facility')\n                                }\n                            }\n                            else {\n                                this.openDialogadd('Product already attached with this QR Code')\n                            }\n                        }\n                        else {\n                            this.openDialogadd(response.error.message)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    getNextChecklistData() {\n        this._appService.getCheckListBySKu(this.productData.inventoryId.skuCode).subscribe((data: any) => {\n            if (data.data != null) {\n                const details = []\n                const detailRes: any = data.data;\n\n                for (const i of detailRes) {\n                    details.push({\n                        id: i.id,\n                        skuCode: i.skuCode,\n                        accessory: i.accessory,\n                        quantity: i.quantity,\n                        conditionCheck: i.conditionCheck\n                    })\n                }\n                this.productData.cardStatus = true\n                this.checkList = details\n\n                if (this.checkList.length > 0) {\n                    this.productData.check = this.checkList\n                }\n                this.productArray.push(this.productData)\n            }\n            else {\n                this.openDialogadd(data.error.message)\n            }\n        })\n    }\n    checkListObj: any = {\n        checkListArray: []\n    }\n    checklistPostObj: any = {\n        array: []\n    }\n    loaderBtn = false;\n    delete(index) {\n        this.productArray.splice(index, 1)\n        if (this.productArray == '') {\n            this.router.navigate(['./dispatch']);\n        }\n    }\n    addtoDispatch() {\n        if (this.receivedBy == '') {\n            this.receivedBy = null\n        }\n        this.formValidate = true\n        const postObj: any = []\n        const data: any = []\n        for (let i = 0; i < this.productArray.length; i++) {\n            // this.barcodes.push(this.productArray[i].barcode);\n            postObj.push({\n                id: this.productArray[i].id,\n                barcode: this.productArray[i].barcode,\n                invoiceId: this.invoiceId,\n                createdTime: new Date(),\n                updatedTime: new Date(),\n                comment: this.comment,\n                createdUser: localStorage.getItem('userName'),\n                expectedDeliveryDates: this.expectedDeliveryDates,\n                productReturn: this.productArray[i].returnProduct,\n                receivedBy: this.receivedBy,\n                paymentModes: {\n                    id: localStorage.getItem('paymentMode')\n                },\n                channel: {\n                    id: localStorage.getItem('channel')\n                },\n                dispatchType:\n                {\n                    \"id\": parseInt(localStorage.getItem('dispatchType'))\n                }\n            })\n            if (this.imageId != '') {\n                postObj[i].dispatchPaymentDocuments = {\n                    id: this.imageId\n                }\n            } else {\n                postObj[i].dispatchPaymentDocuments = null\n            }\n            if (this.productArray[i].check) {\n                const checklist: any = { checkListArray: [] }\n                for (let j = 0; j < this.productArray[i].check.length; j++) {\n                    checklist.checkListArray.push({\n                        \"accessoriesId\": this.productArray[i].check[j].id,\n                        \"accessoryCondition\": this.productArray[i].check[j].conditionCheck,\n                        \"quantity\": this.productArray[i].check[j].conditionCheck ? this.productArray[i].check[j].quantity : 0\n                    })\n                    checklist.inventoryItemId = {\n                        id: this.productArray[i].id\n                    }\n                }\n                data.push(checklist)\n            }\n            this.checklistPostObj.array = data\n        }\n        if (this.expectedDeliveryDates != null && this.expectedDeliveryDates != '' && this.comment != null && this.comment != '') {\n            this.loaderBtn = true;\n            this._appService.addDispatch(postObj).subscribe((data: any) => {\n                if (data.error == null) {\n                    if (this.checklistPostObj.array.length > 0) {\n                        this._appService.addCheckList(this.checklistPostObj).subscribe((data: any) => {\n                            if (data.data != null) {\n                                this.loaderBtn = false;\n                                this.openDialog('Invoice & Checklist added successfully ')\n                            } else {\n                                this.loaderBtn = false;\n                                this.openDialog(data.error.message)\n                            }\n                        })\n                    } else {\n                        this.loaderBtn = false;\n                        this.openDialog('Invoice generated successfully')\n                    }\n                } else {\n                    this.loaderBtn = false;\n                    this.openDialog(data.error.message);\n                }\n            })\n\n        }\n\n    }\n    openDialog(msgText) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', msgText)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.gotoPreviousPage();\n            }\n        });\n    }\n    openDialogadd(msgText) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', msgText)\n        dialogRef.afterClosed().subscribe(result => {\n\n        });\n    }\n    onChange(i, j) {\n\n        if (this.productArray[i].check[j].conditionCheck) {\n            this.productArray[i].check[j].quantity = 1\n        } else {\n            this.productArray[i].check[j].quantity = 0\n        }\n\n    }\n    gotoPreviousPage() {\n        this.router.navigate(['./dispatch']);\n    }\n    expand(i) {\n        if (this.productArray[i].cardStatus) {\n            this.productArray[i].cardStatus = false;\n        } else {\n            this.productArray[i].cardStatus = true;\n        }\n    }\n\n}\n\n\n\n\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InvoiceViewComponent, DialogComponent } from './invoice-view.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { SharedModule } from '../../shared.module'\n\nimport {\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: InvoiceViewComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatIconModule,\n        MatCheckboxModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSelectModule,\n        CommonModule,\n        MatDialogModule,\n        SharedModule,\n        [RouterModule.forChild(routes)],\n        FormsModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    ],\n    declarations: [InvoiceViewComponent, DialogComponent],\n    providers: [\n\n    ],\n    entryComponents: [DialogComponent]\n})\nexport class InvoiceViewModule { }\n"],"sourceRoot":""}