{"version":3,"sources":["webpack:///./src/app/+product-management/return-invoice/return-invoice.component.html","webpack:///./src/app/+product-management/return-invoice/return-invoice.component.ts","webpack:///./src/app/+product-management/return-invoice/return-invoice.module.ts"],"names":[],"mappings":"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","file":"return-invoice-return-invoice-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Return Management</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"returnManagementForm\\\">\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12 col-12\\\">\\n                                    <!-- <mat-form-field class=\\\"example-full-width\\\">\\n                                                <input matInput name=\\\"invoiceId\\\" formControlName=\\\"invoice\\\"\\n                                                    [(ngModel)]=\\\"invoiceId\\\">\\n                                                <mat-placeholder class=\\\"placeholder\\\">Invoice Id *</mat-placeholder>\\n                                            </mat-form-field> -->\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <!-- <input matInput name=\\\"invoiceId\\\" formControlName=\\\"invoice\\\" [(ngModel)]=\\\"invoiceId\\\"\\n                                            (keyup)=\\\"getInvoiceSbasedonSearch()\\\" autocomplete=\\\"off\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Invoice Id *</mat-placeholder> -->\\n                                        <label><b>Return Type</b></label>\\n                                        <mat-select formControlName=\\\"returnType\\\" [(ngModel)]=\\\"typeofReturn\\\"\\n                                            (selectionChange)=\\\"changeReturn()\\\" matInput>\\n                                            <mat-option value=\\\"\\\" disabled>Select</mat-option>\\n                                            <mat-option *ngFor=\\\"let type of Returns\\\" [value]=\\\"type.id\\\">\\n                                                {{type.type}}</mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n                <div *ngIf='showNormalReturn' class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Return Invoice</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"invoiceForm\\\">\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-10 col-10\\\">\\n                                    <!-- <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput name=\\\"invoiceId\\\" formControlName=\\\"invoice\\\"\\n                                            [(ngModel)]=\\\"invoiceId\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Invoice Id *</mat-placeholder>\\n                                    </mat-form-field> -->\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput name=\\\"invoiceId\\\" formControlName=\\\"invoice\\\" [(ngModel)]=\\\"invoiceId\\\"\\n                                            (keyup)=\\\"getInvoiceSbasedonSearch()\\\" autocomplete=\\\"off\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Invoice Id *</mat-placeholder>\\n                                    </mat-form-field>\\n\\n                                    <div class=\\\"height-skus\\\">\\n                                        <div *ngFor=\\\"let key of filteredInvoicesList\\\" (click)=\\\"selectInvoice(key)\\\"\\n                                            style=\\\"border-bottom:1px solid #AAAAAA;padding: 3px\\\">\\n                                            {{key}} </div>\\n                                    </div>\\n                                    <span *ngIf=\\\"invoiceForm.controls['invoice'].hasError('required') &&formValidate \\\"\\n                                        class=\\\"text-danger\\\">Please\\n                                        enter Invoice Id</span>\\n                                </div>\\n                                <div class=\\\"col-sm-2 col-2\\\" (click)=\\\"getInvoiceBybarcode()\\\" style=\\\"margin: auto\\\"><img\\n                                        src=\\\"assets/img/qr-code.png\\\">\\n                                </div>\\n                            </div>\\n                            <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger pull-center\\\" (click)=\\\"navigatetoHomePage()\\\">Cancel</button>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-center\\\" (click)=\\\"navigatetoInvoice()\\\">Submit</button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <div *ngIf='showRentalreturn' class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Rental Invoice</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"rentalInvoiceForm\\\">\\n\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12 col-12\\\">\\n                                    <!-- <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput name=\\\"invoiceId\\\" formControlName=\\\"invoice\\\"\\n                                            [(ngModel)]=\\\"invoiceId\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Invoice Id *</mat-placeholder>\\n                                    </mat-form-field> -->\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput name=\\\"rentalInvoiceId\\\" formControlName=\\\"invoiceId\\\" [(ngModel)]=\\\"rentalInvoiceId\\\"\\n                                            (keyup)=\\\"getInvoiceSbasedonSearchInRental()\\\" autocomplete=\\\"off\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Invoice Id *</mat-placeholder>\\n                                    </mat-form-field>\\n\\n                                    <div class=\\\"height-skus\\\">\\n                                        <div *ngFor=\\\"let key of filteredInvoicesListInRental\\\" (click)=\\\"selectInvoiceInRental(key)\\\"\\n                                            style=\\\"border-bottom:1px solid #AAAAAA;padding: 3px\\\">\\n                                            {{key}} </div>\\n                                    </div>\\n                                    <span *ngIf=\\\"rentalInvoiceForm.controls['invoiceId'].hasError('required') &&submitted \\\"\\n                                        class=\\\"text-danger\\\">Please\\n                                        enter Invoice Id</span>\\n                                </div>\\n                            </div>\\n                            <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger pull-center\\\" (click)=\\\"navigatetoHomePage()\\\">Cancel</button>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-center\\\" (click)=\\\"navigatetoRentalInvoice()\\\">Submit</button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <div *ngIf='showDemoreturn' class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Demo Invoice</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form [formGroup]=\\\"demoInvoiceForm\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12 col-12\\\">\\n\\n                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                        <input matInput name=\\\"rentalInvoiceId\\\" formControlName=\\\"invoice\\\" [(ngModel)]=\\\"demoInvoiceId\\\"\\n                                            (keyup)=\\\"getDemosBasedonSearch()\\\" autocomplete=\\\"off\\\">\\n                                        <mat-placeholder class=\\\"placeholder\\\">Demo Id *</mat-placeholder>\\n                                    </mat-form-field>\\n\\n                                    <div class=\\\"height-skus\\\">\\n                                        <div *ngFor=\\\"let key of filteredDemoInvoicesList\\\" (click)=\\\"selectDemoInvoice(key)\\\"\\n                                            style=\\\"border-bottom:1px solid #AAAAAA;padding: 3px\\\">\\n                                            {{key}} </div>\\n                                    </div>\\n                                    <span *ngIf=\\\"demoInvoiceForm.controls['invoice'].hasError('required') &&demoFormValidate \\\"\\n                                        class=\\\"text-danger\\\">Please\\n                                        enter demo Id</span>\\n                                </div>\\n\\n                            </div>\\n                            <button mat-raised-button type=\\\"button\\\" class=\\\"btn btn-danger pull-center\\\" (click)=\\\"navigatetoHomePage()\\\">Cancel</button>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-center\\\" (click)=\\\"navigatetoDemoInvoice()\\\">Submit</button>\\n                        </form>\\n                    </div>\\n                </div>\\n                <br><br>\\n                <div *ngIf=\\\"array.length>0 && showNormalReturn\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header card-header-info\\\">\\n                            <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Return QR Code</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>QRCode</th>\\n                                            <th>Action</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let item of productData\\\">\\n                                            <td>{{item.inventoryItem.barcode}}</td>\\n                                            <td>\\n                                                <mat-checkbox [(ngModel)]=\\\"item.condition\\\" name=\\\"checkbox\\\">\\n                                                </mat-checkbox>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <br>\\n                            </div>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submit()\\\">Submit\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"rentalArray.length>0 && showRentalreturn\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header card-header-info\\\">\\n                            <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Rental QR Code</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>QRCode</th>\\n                                            <th>Action</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let item of rentalProductData\\\">\\n                                            <td>{{item.inventoryItem.barcode}}</td>\\n                                            <td>\\n                                                <mat-checkbox (click)=\\\"$event.preventDefault()\\\" [(ngModel)]=\\\"item.condition\\\"\\n                                                    name=\\\"checkbox\\\">\\n                                                </mat-checkbox>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                                <br>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-6\\\">\\n                                    <form [formGroup]=\\\"rentalReasonForm\\\">\\n                                        <mat-form-field>\\n                                            <label>Add Reasons</label>\\n                                            <mat-select matInput [(ngModel)]=\\\"rentalReason\\\" formControlName='rentalReason'\\n                                                required>\\n                                                <mat-option value='' disabled>Select</mat-option>\\n                                                <mat-option *ngFor=\\\"let reason of rentalReasons\\\" [value]=\\\"reason.id\\\">\\n                                                    {{reason.status}}</mat-option>\\n                                            </mat-select>\\n                                        </mat-form-field>\\n                                        <span *ngIf=\\\"rentalReasonForm.controls['rentalReason'].hasError('required') && rentalSub\\\"\\n                                            class=\\\" text-danger\\\">Please\\n                                            select Add Reasons</span>\\n                                    </form>\\n                                </div>\\n                            </div>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submitRental()\\\">Submit\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"demoArray.length>0 && showDemoreturn\\\">\\n                    <div class=\\\"card\\\">\\n                        <div class=\\\"card-header card-header-info\\\">\\n                            <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Demo QR Code</h4>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"table-responsive\\\">\\n                                <table class=\\\"table table-bordered table-striped\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>QRCode</th>\\n                                            <th>Action</th>\\n                                        </tr>\\n                                    </thead>\\n                                    <tbody>\\n                                        <tr *ngFor=\\\"let item of demoProductData\\\">\\n                                            <td>{{item.inventoryItem.barcode}}</td>\\n                                            <td>\\n                                                <mat-checkbox [(ngModel)]=\\\"item.condition\\\" name=\\\"checkbox\\\" checked\\n                                                    (click)=\\\"noCarToastr($event, hasCar)\\\">\\n                                                </mat-checkbox>\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                    <br />\\n\\n                                </table>\\n\\n\\n                            </div>\\n                            <form [formGroup]=\\\"returnForm\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-12 col-12\\\">\\n                                        <mat-form-field>\\n                                            <label><b>Return Type</b></label>\\n                                            <mat-select [(ngModel)]=\\\"typeOfReturn\\\" formControlName=\\\"type\\\" matInput>\\n                                                <mat-option value=\\\"\\\" disabled>Select</mat-option>\\n                                                <mat-option *ngFor=\\\"let type of ReturnTypes\\\" [value]=\\\"type.id\\\">\\n                                                    {{type.status}}</mat-option>\\n\\n                                            </mat-select>\\n\\n                                        </mat-form-field>\\n                                        <span *ngIf=\\\"returnForm.controls['type'].hasError('required') &&returnFormSubmitted \\\"\\n                                            class=\\\"text-danger\\\">Please\\n                                            select return type</span>\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\\"typeOfReturn==10\\\" class=\\\"row\\\">\\n                                    <div class=\\\"col-sm-12 col-12\\\">\\n                                        <mat-form-field>\\n                                            <label><b>Comments</b></label>\\n                                            <textarea formControlName=\\\"comments\\\" matInput [(ngModel)]=\\\"comments\\\">\\n                            </textarea>\\n                                        </mat-form-field>\\n                                    </div>\\n                                </div>\\n                            </form>\\n                            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\" (click)=\\\"submitDemo()\\\">Submit\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n// import {Router} from '@angular/router';\nimport { AppService } from '../../app.service';\nimport { FormGroup, FormControl, AbstractControl, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { MatDialog } from '@angular/material';\ndeclare var cordova: any;\nimport { PlatformLocation } from '@angular/common';\nimport { QRCodeScanner } from '../../+qrcode-scanner/qrcode-scanner.service';\n@Component({\n    selector: 'app-return-invoice',\n    templateUrl: './return-invoice.component.html',\n    styles: [`\n    .footer-text{\n        font-weight:bold\n    }\n    .mat-focused .placeholder {\n        color: #AAAAAA;\n        }\n      .placeholder {\n         color:#AAAAAA;\n        }\n    `]\n})\n\nexport class ReturnInvoiceComponent implements OnInit {\n    invoiceId;\n    demoInvoiceId;\n    public invoiceForm: FormGroup;\n    public rentalInvoiceForm: FormGroup;\n    public demoInvoiceForm: FormGroup;\n    public rentalReasonForm: FormGroup;\n    public returnForm: FormGroup;\n    formValidate: boolean;\n    demoFormValidate: boolean\n    submitted: boolean;\n    productData: any;\n    rentalProductData: any\n    demoProductData: any;\n    status = false;\n    typeofReturn: any = \"\";\n    returnManagementForm: FormGroup;\n    rentalReason;\n    showNormalReturn: boolean = false;\n    showRentalreturn: boolean = false;\n    showDemoreturn: boolean = false;\n    Returns = [{ \"id\": 1, \"type\": \"Normal\" }, { \"id\": 2, \"type\": \"Rental\" }, { \"id\": 3, \"type\": \"Demo\" }]\n    constructor(\n        private readonly router: Router,\n        private readonly _qrScanner: QRCodeScanner,\n        private readonly fb: FormBuilder,\n        private readonly appService: AppService,\n        public dialog: MatDialog,\n    ) {\n        this.invoiceForm = this.fb.group({\n            invoice: [null, [Validators.required]],\n        })\n        this.rentalInvoiceForm = this.fb.group({\n            invoiceId: [null, [Validators.required]],\n        })\n        this.demoInvoiceForm = this.fb.group({\n            invoice: [null, [Validators.required]]\n        })\n        this.rentalReasonForm = this.fb.group({\n            rentalReason: [null, [Validators.required]]\n        })\n        this.returnForm = new FormGroup({\n            'type': new FormControl(null, Validators.required),\n            'comments': new FormControl(null)\n        });\n        this.returnManagementForm = new FormGroup({\n            'returnType': new FormControl(null, Validators.required)\n        })\n\n    }\n\n    resultQrcode: any;\n    array = [];\n    rentalArray = []\n    demoArray = []\n\n    getInvoiceBybarcode() {\n        this._qrScanner.promiseScan().then(result => {\n            this.resultQrcode = result;\n            if (!this.resultQrcode.cancelled) {\n                this.invoiceId = this.resultQrcode.text\n                localStorage.setItem('invoiceId', this.resultQrcode.text)\n            }\n        });\n    }\n    dispatchedInvoices; invoice;\n    dispatchedDemoInvoices; ReturnTypes = [];\n\n    ngOnInit() {\n        /**\n         * Back Button event trigger\n         */\n        history.pushState(null, null, location.href);\n        window.onpopstate = function (event) {\n            history.go(1);\n        };\n        this.appService.getDemoReturnStatuses().subscribe(data => {\n            if (data.error == null) {\n                this.ReturnTypes = data.data;\n            }\n        })\n        this.getIdChange();\n        this.getIdChangeInRental()\n        this.getDemoInvoices();\n\n    }\n    changeReturn() {\n        // const a=this.typeofReturn;\n        if (this.typeofReturn == 1) {\n            this.showNormalReturn = true;\n            this.showRentalreturn = false;\n            this.showDemoreturn = false;\n            this.array = [];\n            this.rentalArray = [];\n            this.demoArray = [];\n            this.invoiceForm.reset();\n            this.rentalInvoiceForm.reset();\n            this.demoInvoiceForm.reset();\n        }\n        else if (this.typeofReturn == 2) {\n            this.showNormalReturn = false;\n            this.showRentalreturn = true;\n            this.showDemoreturn = false;\n            this.array = [];\n            this.rentalArray = [];\n            this.demoArray = [];\n            this.invoiceForm.reset();\n            this.rentalInvoiceForm.reset();\n            this.demoInvoiceForm.reset();\n        }\n        else {\n            this.showNormalReturn = false;\n            this.showRentalreturn = false;\n            this.showDemoreturn = true;\n            this.array = [];\n            this.rentalArray = [];\n            this.demoArray = [];\n            this.invoiceForm.reset();\n            this.rentalInvoiceForm.reset();\n            this.demoInvoiceForm.reset();\n        }\n    }\n    rentalReasons;\n    getAllStatusesRentalReasons() {\n        this.appService.getAllStatusesRentalReasons().subscribe((data: any) => {\n            if (data.error == null) {\n                this.rentalReasons = data.data\n            }\n        })\n    }\n\n    getIdChange() {\n        this.appService.getAllDispatchedInvoices().subscribe((data: any) => {\n            if (data.data != null) {\n                this.dispatchedInvoices = data.data\n            }\n        })\n    }\n    getDemoInvoices() {\n        // this.appService.getAllDemoDispatchedProducts\n        this.appService.getAllDemoDispatchedProducts().subscribe((data: any) => {\n            if (data.data != null) {\n                this.dispatchedDemoInvoices = data.data\n            }\n        })\n    }\n\n    filteredInvoicesList: any = [];\n    filteredDemoInvoicesList: any = [];\n    getInvoiceSbasedonSearch() {\n        this.invoiceSelection = false;\n        this.filteredInvoicesList = [];\n        if (this.invoiceId) {\n            this.dispatchedInvoices.find((data) => {\n                if ((data.toLowerCase()).includes(this.invoiceId.toLowerCase())) {\n                    this.filteredInvoicesList.push(data)\n                }\n            })\n        }\n\n    }\n    getDemosBasedonSearch() {\n        this.demoInvoiceSelection = false;\n        this.filteredDemoInvoicesList = [];\n        if (this.demoInvoiceId) {\n            this.dispatchedDemoInvoices.find((data) => {\n                if ((data.toLowerCase()).includes(this.demoInvoiceId.toLowerCase())) {\n                    this.filteredDemoInvoicesList.push(data)\n                }\n            })\n        }\n    }\n\n    invoiceSelection = false;\n    object;\n    selectInvoice(obj) {\n        this.invoiceSelection = true;\n        this.invoiceId = obj;\n        this.filteredInvoicesList = [];\n    }\n    demoInvoiceSelection = false;\n    selectDemoInvoice(obj) {\n        this.invoiceSelection = true;\n        this.demoInvoiceId = obj;\n        this.filteredDemoInvoicesList = [];\n    }\n    hasCar = false;\n    noCarToastr(event: Event) {\n        let me = this;\n        if (!this.hasCar) {\n            event.preventDefault()\n        }\n    }\n\n    rentalInvoiceId;\n\n    dispatchedInvoicesInRental;\n    getIdChangeInRental() {\n        this.appService.getAllDispatchedInvoicesInRental().subscribe((data: any) => {\n            if (data.data != null) {\n                this.dispatchedInvoicesInRental = data.data\n            }\n        })\n    }\n\n    filteredInvoicesListInRental: any = [];\n    getInvoiceSbasedonSearchInRental() {\n        this.invoiceSelectionInRental = false;\n        this.filteredInvoicesListInRental = [];\n        if (this.rentalInvoiceId) {\n            this.dispatchedInvoicesInRental.find((data) => {\n                if ((data.toLowerCase()).includes(this.rentalInvoiceId.toLowerCase())) {\n                    this.filteredInvoicesListInRental.push(data)\n                }\n            })\n        }\n    }\n\n    invoiceSelectionInRental = false;\n    selectInvoiceInRental(obj) {\n        this.invoiceSelectionInRental = true;\n        this.rentalInvoiceId = obj;\n        this.filteredInvoicesListInRental = [];\n    }\n    rental = false;\n    navigatetoInvoice() {\n        if (this.invoiceForm.valid) {\n            this.rental = true;\n            this.demo = true;\n            localStorage.setItem('invoiceId', this.invoiceId);\n            this.appService.getDetailsByInvoice(this.invoiceForm.value.invoice).subscribe((data: any) => {\n                if (data.data != null) {\n                    this.productData = data.data\n                    this.array = data.data;\n                    this.status = true\n                    for (const i of this.productData) {\n                        i.condition = false\n                    }\n                }\n                if (data.data == \"\") {\n                    this.openDialog(data.error.message)\n                    this.invoiceForm.reset()\n                }\n            })\n        } else {\n            this.formValidate = true\n        }\n    }\n    normalInvoice = false;\n    navigatetoRentalInvoice() {\n        if (this.rentalInvoiceForm.valid) {\n            this.normalInvoice = true;\n            this.demo = true;\n            localStorage.setItem('invoiceId', this.rentalInvoiceId);\n            this.appService.checkInvoice(this.rentalInvoiceForm.value.invoiceId).subscribe((data1: any) => {\n                if (data1.error == null) {\n                    this.appService.getDetailsByInvoice(this.rentalInvoiceForm.value.invoiceId).subscribe((data: any) => {\n                        if (data.data != null) {\n                            this.rentalProductData = data.data\n                            this.rentalArray = data.data;\n                            this.status = true\n                            for (const i of this.rentalProductData) {\n                                i.condition = true\n                            }\n                            this.getAllStatusesRentalReasons();\n                        }\n                        if (data.data == \"\") {\n                            this.openDialog(data.error.message)\n                            this.rentalInvoiceForm.reset()\n                        }\n                    })\n                } else {\n                    this.openDialog(data1.error.message)\n                }\n\n            })\n        } else {\n            this.submitted = true\n        }\n    }\n    demo = false;\n    navigatetoDemoInvoice() {\n        if (this.demoInvoiceForm.valid) {\n            this.appService.getReturnProductInformation(this.demoInvoiceForm.get('invoice').value).subscribe(data1 => {\n                if (data1.error == null) {\n                    localStorage.setItem('invoiceId', this.demoInvoiceId);\n                    this.appService.getDetailsByInvoice(this.demoInvoiceForm.value.invoice).subscribe((data: any) => {\n                        if (data.data != null) {\n                            this.demoProductData = data.data\n                            this.demoArray = data.data;\n                            this.status = true\n                            for (const i of this.demoProductData) {\n                                i.condition = true\n                            }\n                        }\n                        if (data.data == \"\") {\n                            this.openDialog(data.error.message)\n                            this.demoInvoiceForm.reset()\n                        }\n                    })\n                }\n                else {\n                    this.openDialog(data1.error.message)\n                }\n            })\n        } else {\n            this.demoFormValidate = true\n        }\n    }\n    productArray: any = []\n\n\n    navigatetoHomePage() {\n        this.router.navigate(['./inventory']);\n    }\n\n    openDialog(msgText) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', msgText)\n        dialogRef.afterClosed().subscribe(result => {\n        });\n    }\n\n\n\n    submit() {\n        const productArray: any = []\n        for (let i = 0; i < this.productData.length; i++) {\n            if (this.productData[i].condition) {\n                productArray.push(this.productData[i])\n            }\n        }\n        if (productArray.length > 0) {\n            this.appService.add(productArray)\n            this.router.navigate(['/product/return'])\n        }\n    }\n    rentalSub;\n    submitRental() {\n        this.rentalSub = false;\n        if (this.rentalReasonForm.valid) {\n            localStorage.setItem(\"type\", \"rental\")\n            localStorage.setItem(\"reason\", this.rentalReason)\n            const productArray: any = []\n            for (let i = 0; i < this.rentalProductData.length; i++) {\n                if (this.rentalProductData[i].condition) {\n                    productArray.push(this.rentalProductData[i])\n                }\n            }\n            if (productArray.length > 0) {\n                this.appService.add(productArray)\n                this.router.navigate(['/product/return'])\n            }\n        } else {\n            this.rentalSub = true;\n        }\n    }\n    returnFormSubmitted: boolean = false;\n    submitDemo() {\n        const productArray: any = []\n        if (this.returnForm.valid) {\n            for (let i = 0; i < this.demoProductData.length; i++) {\n                if (this.demoProductData[i].condition) {\n                    productArray.push(this.demoProductData[i])\n                }\n            }\n            if (productArray.length > 0) {\n                this.appService.add(productArray)\n                localStorage.setItem(\"reason\", this.returnForm.get('type').value);\n                localStorage.setItem(\"comments\", this.returnForm.get('comments').value);\n                localStorage.setItem(\"demoId\", this.demoInvoiceForm.get('invoice').value);\n                this.router.navigate(['/product/return'])\n            }\n        }\n        else {\n            this.returnFormSubmitted = true;\n        }\n    }\n\n}\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\nexport class DialogComponent {\n    msgText: any;\n    ngOnInit() {\n        this.msgText = localStorage.getItem('msg');\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ReturnInvoiceComponent,DialogComponent } from './return-invoice.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\nimport {\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule,\n    MatIconModule\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ReturnInvoiceComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        CommonModule,\n        MatDialogModule,\n        [RouterModule.forChild(routes)],\n        FormsModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' })\n    ],\n    declarations: [ReturnInvoiceComponent,DialogComponent],\n    providers: [\n\n    ],\n    entryComponents: [DialogComponent]\n})\nexport class ReturnInvoiceModule { }\n"],"sourceRoot":""}