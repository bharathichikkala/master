{"version":3,"sources":["webpack:///./src/app/+product-management/return/return.component.css","webpack:///./src/app/+product-management/return/return.component.html","webpack:///./src/app/+product-management/return/return.component.ts","webpack:///./src/app/+product-management/return/return.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,iCAAiC,2CAA2C,sBAAsB,kBAAkB,mBAAmB,aAAa,cAAc,yBAAyB,GAAG,YAAY,uBAAuB,aAAa,cAAc,GAAG,gBAAgB,6BAA6B,eAAe,iBAAiB,uBAAuB,uDAAuD,uDAAuD,GAAG,6BAA6B,8BAA8B,+BAA+B,+BAA+B,GAAG,6BAA6B,8BAA8B,mCAAmC,mCAAmC,GAAG,6BAA6B,8BAA8B,kCAAkC,kCAAkC,GAAG,6BAA6B,8BAA8B,kCAAkC,kCAAkC,GAAG,8BAA8B,QAAQ,kCAAkC,kCAAkC,KAAK,SAAS,uCAAuC,uCAAuC,KAAK,SAAS,kCAAkC,kCAAkC,KAAK,GAAG,sBAAsB,QAAQ,kCAAkC,kCAAkC,KAAK,SAAS,uCAAuC,uCAAuC,KAAK,SAAS,kCAAkC,kCAAkC,KAAK,GAAG,wBAAwB,kBAAkB,GAAG,oDAAoD,qBAAqB,GAAG,6BAA6B,qBAAqB,GAAG,gBAAgB,gBAAgB,GAAG,C;;;;;;;;;;;ACAjuD,6SAA6S,sHAAsH,uHAAuH,uOAAuO,gBAAgB,4EAA4E,4BAA4B,gFAAgF,gBAAgB,w1BAAw1B,iBAAiB,8kBAA8kB,iBAAiB,+xBAA+xB,iBAAiB,+tBAA+tB,iBAAiB,8zBAA8zB,iBAAiB,itBAAitB,iBAAiB,uqBAAuqB,iBAAiB,qWAAqW,iBAAiB,mNAAmN,eAAe,q2BAAq2B,iBAAiB,wYAAwY,iBAAiB,yUAAyU,8BAA8B,03BAA03B,iBAAiB,2cAA2c,iBAAiB,+NAA+N,mBAAmB,8gCAA8gC,iBAAiB,iTAAiT,iBAAiB,mZAAmZ,cAAc,+lCAA+lC,iBAAiB,yRAAyR,mBAAmB,+xBAA+xB,+XAA+X,iBAAiB,sTAAsT,+BAA+B,kBAAkB,sFAAsF,eAAe,6ZAA6Z,iBAAiB,mEAAmE,8BAA8B,wkDAAwkD,iBAAiB,u8BAAu8B,yEAAyE,+DAA+D,gEAAgE,uFAAuF,owC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv/jB;AACY;AAC9B;AACN;AACK;AAC+D;AAS7G;IAWI,gCACW,UAAyB,EACzB,WAAuB,EACvB,OAAe,EACf,MAAiB,EACP,EAAe;QALpC,iBAmBC;QAlBU,eAAU,GAAV,UAAU,CAAe;QACzB,gBAAW,GAAX,WAAW,CAAY;QACvB,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAW;QACP,OAAE,GAAF,EAAE,CAAa;QA6DpC,cAAS,GAAQ;YACb,YAAY,EAAE,EAAE;SACnB,CAAC;QAwCF,qBAAgB,GAAQ;YACpB,KAAK,EAAE,EAAE;SACZ;QACD,cAAS,GAAG,KAAK;QACjB,iBAAY,GAAG,KAAK;QACpB,cAAS,GAAG,KAAK,CAAC;QA1Gd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,iBAAO;YAC7C,KAAgB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO,EAAE;gBAApB,IAAM,CAAC;gBACR,KAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,KAAgB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAA9B,IAAI,GAAG;oBACR,GAAG,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,QAAQ;iBACjE;gBACD,KAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,KAAI,CAAC,uBAAuB,EAAE,CAAC;gBAC/B,KAAI,CAAC,iBAAiB,EAAE;aAC3B;QACL,CAAC,CAAC;IACN,CAAC;IAGD,yCAAQ,GAAR;QACI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE;QAC9B;;MAEF;QACE,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC7C,MAAM,CAAC,UAAU,GAAG,UAAC,KAAK;YACtB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC;QACF,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC5C,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE;YAC1C,IAAI,CAAC,MAAM,GAAG,EAAE;SACnB;aAAM;YACH,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC;SAC/C;IACL,CAAC;IAED,yCAAQ,GAAR,UAAS,CAAC,EAAE,CAAC;QACT,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE;YACtD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC;SACjD;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC;SACjD;IACL,CAAC;IAED,2DAA0B,GAA1B;QAAA,iBAiBC;QAhBG,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC,SAAS,CAAC,cAAI;YACrD,IAAM,OAAO,GAAQ,IAAI,CAAC;YAC1B,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,EAAE;gBACtB,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC;gBACnC,KAAgB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAA9B,IAAM,CAAC;oBACR,IAAM,OAAO,GAAQ,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,gBAAM,IAAI,QAAC,KAAK,MAAM,CAAC,EAAE,EAAf,CAAe,CAAC;oBACxE,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;oBACrD,IAAI,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,EAAE;wBACzC,KAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;4BACnG,IAAM,OAAO,GAAQ,IAAI,CAAC;4BAC1B,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;wBACnC,CAAC,CAAC;qBACL;iBACJ;aACJ;QACL,CAAC,CAAC;IACN,CAAC;IAID,wDAAuB,GAAvB;QAAA,iBAWC;QAVG,IAAI,CAAC,WAAW,CAAC,wBAAwB,EAAE,CAAC,SAAS,CAAC,cAAI;YACtD,IAAM,SAAS,GAAQ,IAAI,CAAC;YAC5B,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE;gBACxB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC;gBACjC,KAAgB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;oBAA9B,IAAM,CAAC;oBACR,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAM,IAAI,QAAC,KAAK,MAAM,CAAC,EAAE,EAAf,CAAe,CAAC;oBAChE,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,GAAG,KAAI,CAAC,SAAS,CAAC,EAAE;iBACtD;aACJ;QACL,CAAC,CAAC;IACN,CAAC;IAED,kDAAiB,GAAjB;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5C,IAAM,WAAW,GAAQ,IAAI,CAAC;YAC9B,IAAI,WAAW,CAAC,IAAI,IAAI,IAAI,EAAE;gBAC1B,KAAI,CAAC,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC;aAC1C;QACL,CAAC,CAAC;IACN,CAAC;IAED,8CAAa,GAAb,UAAc,KAAK;QAAnB,iBAeC;QAdG,IAAI,KAAK,CAAC,oBAAoB,CAAC,EAAE,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,KAAK,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzF,IAAM,OAAO,GAAQ,IAAI,CAAC;gBAC1B,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;YACnC,CAAC,CAAC;YACF,KAAK,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE;SAC7B;aACI;YACD,IAAI,CAAC,WAAW,CAAC,6BAA6B,CAAC,KAAK,CAAC,oBAAoB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;gBACzF,IAAM,OAAO,GAAQ,IAAI;gBACzB,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,CAAC,CAAC;YACF,KAAK,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE;SAC7B;IACL,CAAC;IAQD,iEAAgC,GAAhC;QACI,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE;YACvD,IAAI,CAAC,cAAc,EAAE,CAAC;SACzB;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,sDAAsD,CAAC;SAC7E;IACL,CAAC;IACD,+CAAc,GAAd;QAAA,iBA2FC;QA1FG,IAAI,CAAC,YAAY,GAAG,IAAI;QACxB,IAAM,OAAO,GAAQ,EACpB;QACD,IAAM,IAAI,GAAQ,EAAE;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,2EAA2E;YAC3E,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YAClF,KAAqB,UAAmB,EAAnB,SAAI,CAAC,cAAc,EAAnB,cAAmB,EAAnB,IAAmB,EAAE;gBAArC,IAAI,QAAQ;gBACb,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,EAAE;oBACjE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,GAAG;wBAC5C,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;qBACnG,CAAC;iBACL;qBAAM,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,EAAE;oBAC/D,IAAI,CAAC,SAAS,GAAG,KAAK;oBACtB,MAAK;iBACR;aAEJ;YAED,OAAO,CAAC,IAAI,CACR,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CACrC;YAED,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,IAAI,EAAE,EAAE;gBACxD,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,MAAK;aACR;iBACI;gBACD,IAAI,CAAC,SAAS,GAAG,IAAI;aACxB;YAED,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,EAAE;gBAC1D,IAAI,CAAC,SAAS,GAAG,KAAK;gBACtB,MAAK;aACR;iBACI;gBACD,IAAI,CAAC,SAAS,GAAG,IAAI;aACxB;YAED,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3C,IAAM,SAAS,GAAQ,EAAE,cAAc,EAAE,EAAE,EAAE;gBAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC5D,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC;wBAC1B,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE;wBACnE,oBAAoB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB;wBAC1E,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;qBACpH,CAAC;oBACF,SAAS,CAAC,eAAe,GAAG;wBACxB,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE;qBAC5C;iBACJ;gBACD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;aACvB;SACJ;QACD,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,IAAI,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,wBAAwB,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;gBAChF,IAAM,QAAQ,GAAQ,IAAI,CAAC;gBAC3B,IAAI,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE;oBAC3B,IAAM,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAM,EAAE,GAAG;wBACP,UAAU,EAAE,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC;qBAC/C;oBACD,KAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,eAAK;oBAC7D,CAAC,CAAC;iBACL;gBACD,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,EAAE;oBACvB,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;oBAC5C,IAAI,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACxC,KAAI,CAAC,WAAW,CAAC,eAAe,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,UAAC,IAAS;4BACxE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;gCACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gCACvB,KAAI,CAAC,UAAU,CAAC,sDAAsD,CAAC;6BAC1E;iCAAM;gCACH,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gCACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;6BACtC;wBACL,CAAC,CAAC;qBACL;yBACI;wBACD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;wBACvB,KAAI,CAAC,UAAU,CAAC,yCAAyC,CAAC;qBAC7D;iBACJ;qBAAM;oBACH,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;iBACvC;YACL,CAAC,CAAC;SACL;IACL,CAAC;IAED,uCAAM,GAAN,UAAO,CAAC;QACJ,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1C;aAAM;YACH,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;SACzC;IACL,CAAC;IAED,mDAAkB,GAAlB;QACI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IACD,2CAAU,GAAV,UAAW,IAAI;QAAf,iBAQC;QAPG,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;QACjC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpC,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,kBAAkB,EAAE;aAC5B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACD,8CAAa,GAAb,UAAc,IAAI;QAAlB,iBAYC;QAXG,YAAY,CAAC,OAAO,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;QAClD,YAAY,CAAC,OAAO,CAAC,gBAAgB,EAAC,IAAI,CAAC;QAC3C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;QACjC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpC,IAAI,MAAM,EAAE;gBACR,KAAI,CAAC,cAAc,EAAE,CAAC;aACzB;iBAAM;gBACH,KAAI,CAAC,kBAAkB,EAAE;aAC5B;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAjQQ,sBAAsB;QANlC,+DAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;;;SAG7B,CAAC;yCAcyB,oFAAa;YACZ,uDAAU;YACd,sDAAM;YACP,2DAAS;YACH,0DAAW;OAhB3B,sBAAsB,CAkQlC;IAAD,6BAAC;CAAA;AAlQkC;AA0RnC;IACI,yBAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAElC,CAAC;IAED,kCAAQ,GAAR;QACI,IAAI,CAAC,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC;IAC5D,CAAC;IATQ,eAAe;QAnB3B,+DAAS,CAAC;YACP,QAAQ,EAAE,+BAA+B;YACzC,QAAQ,EAAE,2uBAcX;SACF,CAAC;yCAG8B,sDAAM;OADzB,eAAe,CAU3B;IAAD,sBAAC;CAAA;AAV2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxSa;AACM;AACQ;AACW;AACW;AAgBlD;AAE3B,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAsB;KACpC;CACJ;AA2BD;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAxB/B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,iEAAe;gBACf,+DAAa;gBACb,iEAAe;gBACf,oEAAkB;gBAClB,gEAAc;gBACd,kEAAgB;gBAChB,iEAAe;gBACf,mEAAiB;gBACjB,4DAAY;gBACZ,iEAAe;gBACf,sEAAoB;gBACpB,iEAAe;gBACf,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAC/B,0DAAW;gBACX,kEAAmB,CAAC,UAAU,CAAC,EAAE,4BAA4B,EAAE,OAAO,EAAE,CAAC;aAC5E;YACD,YAAY,EAAE,CAAC,wEAAsB,EAAE,iEAAe,CAAC;YACvD,SAAS,EAAE,EAEV;YACC,eAAe,EAAE,CAAC,iEAAe,CAAC;SACvC,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ","file":"return-return-module.js","sourcesContent":["module.exports = \".ui-overlay-c {\\n    background-color: rgba(0, 0, 0, 0.5);\\n    position: fixed;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    left: 0;\\n    text-align: center;\\n}\\n.loading {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n.loading-bar {\\n \\n  display: inline-block;\\n  width: 4px;\\n  height: 18px;\\n  border-radius: 4px;\\n  -webkit-animation: loading 1s ease-in-out infinite;\\n          animation: loading 1s ease-in-out infinite;\\n}\\n.loading-bar:nth-child(1) {\\n  background-color: #3498db;\\n  -webkit-animation-delay: 0;\\n          animation-delay: 0;\\n}\\n.loading-bar:nth-child(2) {\\n  background-color: #c0392b;\\n  -webkit-animation-delay: 0.09s;\\n          animation-delay: 0.09s;\\n}\\n.loading-bar:nth-child(3) {\\n  background-color: #f1c40f;\\n  -webkit-animation-delay: .18s;\\n          animation-delay: .18s;\\n}\\n.loading-bar:nth-child(4) {\\n  background-color: #27ae60;\\n  -webkit-animation-delay: .27s;\\n          animation-delay: .27s;\\n}\\n@-webkit-keyframes loading {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n  20% {\\n    -webkit-transform: scale(1, 2.2);\\n            transform: scale(1, 2.2);\\n  }\\n  40% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n}\\n@keyframes loading {\\n  0% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n  20% {\\n    -webkit-transform: scale(1, 2.2);\\n            transform: scale(1, 2.2);\\n  }\\n  40% {\\n    -webkit-transform: scale(1);\\n            transform: scale(1);\\n  }\\n}\\nmd-checkbox .md-icon {\\nbackground: red;\\n}\\nmd-checkbox.md-default-theme.md-checked .md-icon {\\nbackground: orange;\\n}\\n.mat-focused .placeholder {    \\ncolor: #AAAAAA;\\n}\\n.placeholder {\\ncolor:#AAAAAA;\\n}\"","module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div>\\n                    <div>\\n                        <form>\\n                            <div *ngFor=\\\"let item of productArray;let i=index\\\">\\n                                <div class=\\\"card\\\"\\n                                    [ngStyle]=\\\"{'background':!item.condition ? 'none': '#fff','box-shadow':!item.condition ? 'none': '0 1px 4px 0 rgba(0, 0, 0, 0.14)'}\\\">\\n\\n                                    <div class=\\\"card-header card-header-info\\\">\\n                                        <div>\\n                                            <h4 class=\\\"card-title\\\" style=\\\"text-align:center;display: inline;\\\"\\n                                                (click)=\\\"expand(i)\\\">{{item.inventoryItem.barcode}}</h4>\\n\\n                                            <span style=\\\"float: right;cursor: pointer;\\\" (click)=\\\"expand(i)\\\">\\n                                                <mat-icon>remove_red_eye</mat-icon>\\n                                            </span>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"card-body\\\" *ngIf=\\\"item.condition\\\">\\n\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"QR Code\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.barcode\\\" type=\\\"text\\\"\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\" readonly>\\n                                                </mat-form-field>\\n                                            </div>\\n                                            <div class=\\\"col-md-6\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Created User\\\" type=\\\"text\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.createdUser\\\"\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\" readonly>\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Product Name\\\" type=\\\"text\\\"\\n                                                        name=\\\"productName\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.inventoryId.productName\\\"\\n                                                        readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"P.O Number\\\" type=\\\"text\\\" name=\\\"ponumber\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.poVendorId.purchaseOrderNumber\\\"\\n                                                        readonly [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\" *ngIf=\\\"item.inventoryItem.serialNumber !=null\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"Serial Number\\\" type=\\\"text\\\"\\n                                                        name=\\\"serialNumber\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.serialNumber\\\" readonly\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field class=\\\"example-full-width\\\">\\n                                                    <input matInput placeholder=\\\"SKU Code\\\" type=\\\"text\\\" name=\\\"skucode\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.inventoryId.skuCode\\\" readonly\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Facility\\\" type=\\\"text\\\" name=\\\"facility\\\"\\n                                                        [(ngModel)]=\\\"item.facility.facility\\\" readonly\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                                    <!-- <label>Facility</label>\\n                                                        <mat-select matInput readonly\\n                                                            [(ngModel)]=\\\"item.facility.id\\\"\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                                            <mat-option *ngFor=\\\"let item of facilitiesList\\\"\\n                                                                [value]=\\\"item.id\\\">{{item.facility}}</mat-option>\\n                                                        </mat-select> -->\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n\\n\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Product Condition\\\" type=\\\"text\\\"\\n                                                        name=\\\"condition\\\"\\n                                                        [(ngModel)]=\\\"item.inventoryItem.inventoryConditionId.inventoryCondition\\\"\\n                                                        readonly [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                                    <!-- <label>Product Condition</label>\\n                                                        <mat-select matInput disabled\\n                                                            [(ngModel)]=\\\"item.inventoryItem.inventoryConditionId.id\\\"\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                            (selectionChange)=\\\"getStatusList(item.inventoryItem)\\\">\\n                                                            <mat-option *ngFor=\\\"let condition of conditionsList\\\"\\n                                                                [value]=\\\"condition.id\\\">{{condition.inventoryCondition}}\\n                                                            </mat-option>\\n                                                        </mat-select> -->\\n                                                </mat-form-field>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\" *ngIf=\\\"item.inventoryItem.inventoryConditionId.id==1\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Product Status\\\" type=\\\"text\\\"\\n                                                        name=\\\"condition\\\" [(ngModel)]=\\\"this.statusObj.itemStatus\\\"\\n                                                        readonly [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                        #status1=\\\"ngModel\\\" required>\\n                                                    <!-- <label>Product Status</label>\\n                                                        <mat-select matInput disabled\\n                                                            [(ngModel)]=\\\"item.inventoryItem.itemStatusId.id\\\"\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\" #status1=\\\"ngModel\\\">\\n                                                            <mat-option *ngFor=\\\"let status of statusList\\\"\\n                                                                [value]=\\\"status.id\\\">{{status.itemStatus}}</mat-option>\\n                                                        </mat-select> -->\\n                                                </mat-form-field>\\n                                                <span *ngIf=\\\"item.inventoryItem.itemStatusId.id== ''\\\"\\n                                                    class=\\\" text-danger\\\">Please\\n                                                    enter Itemstatus</span>\\n\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field>\\n                                                    <input matInput placeholder=\\\"Return to Facility\\\" type=\\\"text\\\" \\n                                                        [(ngModel)]=\\\"item.inventoryItem.facilityId.facility\\\" readonly\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                                    <!-- <label>Return to Facility</label>\\n                                                    <mat-select matInput [(ngModel)]=\\\"item.inventoryItem.facilityId.id\\\"\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                                                        <mat-option disabled [value]=item.inventoryItem.facilityId.id>\\n                                                            Select</mat-option>\\n                                                        <mat-option *ngFor=\\\"let fac of facilitiesList\\\" [value]=\\\"fac.id\\\">\\n                                                            {{fac.facility}}</mat-option>\\n                                                    </mat-select> -->\\n                                                </mat-form-field>\\n                                                <span *ngIf=\\\"item.inventoryItem.facilityId.id==''\\\"\\n                                                    class=\\\" text-danger\\\">Please\\n                                                    select return to facility</span>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"row\\\" *ngIf=\\\"item.inventoryItem.inventoryConditionId.id==2\\\">\\n                                            <div class=\\\"col-md-12\\\">\\n                                                <mat-form-field>\\n                                                    <label>Product Status</label>\\n                                                    <mat-select matInput\\n                                                        [(ngModel)]=\\\"item.inventoryItem.itemStatusId.id\\\"\\n                                                        [ngModelOptions]=\\\"{standalone: true}\\\" #status=\\\"ngModel\\\"\\n                                                        required>\\n                                                        <mat-option *ngFor=\\\"let status of statusList1\\\"\\n                                                            [value]=\\\"status.id\\\">{{status.itemStatus}}</mat-option>\\n                                                    </mat-select>\\n                                                </mat-form-field>\\n\\n                                                <span *ngIf=\\\"item.inventoryItem.itemStatusId.id== ''\\\"\\n                                                    class=\\\" text-danger\\\">Please\\n                                                    enter Itemstatus</span>\\n                                            </div>\\n                                        </div>\\n                                        <div>\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-sm-6 col-xs-12\\\"\\n                                                    *ngFor=\\\"let data of item.checklist; let j=index\\\">\\n                                                    <div class=\\\"row\\\">\\n                                                        <mat-slide-toggle class=\\\"primary col-sm-6 col-xs-12\\\"\\n                                                            [(ngModel)]=\\\"data.accessoryCondition\\\"\\n                                                            [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                            (ngModelChange)=\\\"onChange(i,j)\\\" name=\\\"checkbox\\\">\\n\\n                                                            <input matInput type=\\\"number\\\"\\n                                                                style=\\\"border:1px solid #AAAAAA; border-top: 2px solid #AAAAAA;text-align:center;width:31px\\\"\\n                                                                value={{data.quantity}}\\n                                                                [disabled]=\\\"!data.accessoryCondition\\\"\\n                                                                [(ngModel)]=\\\"data.quantity\\\" required\\n                                                                pattern=\\\"^(?:[1-9]|0[1-9]|10)$\\\" #quant=\\\"ngModel\\\"\\n                                                                [ngModelOptions]=\\\"{standalone: true}\\\">\\n                                                            {{data.accessoriesId.accessory}}\\n                                                        </mat-slide-toggle>\\n\\n                                                        <div>\\n                                                            <span *ngIf=\\\"quant.errors && quant.errors.required\\\"\\n                                                                class=\\\" text-danger\\\">\\n                                                                Please enter quantity</span>\\n                                                            <span *ngIf=\\\"quant.errors && quant.errors.pattern\\\"\\n                                                                class=\\\" text-danger\\\">\\n                                                                Please enter only 1-10 numbers</span>\\n                                                        </div>\\n\\n                                                    </div>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n\\n                                    </div>\\n                                </div>\\n\\n                                <!-- <div class=\\\"card\\\">\\n                                        <div class=\\\"card-body\\\">\\n                                            <div class=\\\"row\\\">\\n                                                <div class=\\\"col-md-12\\\">\\n                                                    <mat-form-field class=\\\"example-full-width\\\">\\n                                                        <textarea matInput [(ngModel)]=\\\"item.comments\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                                            required></textarea>\\n                                                        <mat-placeholder class=\\\"placeholder\\\">Comments</mat-placeholder>\\n                                                    </mat-form-field>\\n                                                    <span *ngIf=\\\"formValidate && (comment==null || comment=='')\\\" class=\\\" text-danger\\\">please\\n                                                        enter comments</span>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    </div> -->\\n                                <div>\\n                                    <div *ngIf=\\\"loaderBtn\\\">\\n                                        <div class=\\\"ui-overlay-c\\\">\\n                                            <div class=\\\"loading\\\" style=\\\" margin: 0;\\n                                                    position: absolute;\\n                                                    top: 50%;\\n                                                    left: 50%;\\n                                                    transform: translate(-50%, -50%);\\\">\\n                                                <div class=\\\"loading-bar\\\"></div>\\n                                                <div class=\\\"loading-bar\\\"></div>\\n                                                <div class=\\\"loading-bar\\\"></div>\\n                                                <div class=\\\"loading-bar\\\"></div>\\n                                                <h4 style=\\\"color: #e0dcd4\\\">Loading....</h4>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n\\n\\n                            <button mat-raised-button [disabled]=\\\"loaderBtn\\\" type=\\\"submit\\\"\\n                                class=\\\"btn btn-success pull-right\\\" (click)=\\\"addToInventoryAfterFacilityCheck()\\\">Add\\n                                to Inventory</button>\\n                            <button mat-raised-button [disabled]=\\\"loaderBtn\\\" type=\\\"submit\\\"\\n                                class=\\\"btn btn-danger pull-right\\\" (click)=\\\"navigatetoHomePage()\\\">Cancel</button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, AfterViewInit, OnInit } from '@angular/core';\nimport { QRCodeScanner } from '../../+qrcode-scanner/qrcode-scanner.service';\nimport { AppService } from '../../app.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { FormGroup, FormControl, AbstractControl, FormArray, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n    selector: 'product-return',\n    templateUrl: 'return.component.html',\n    styleUrls: ['return.component.css']\n})\n\nexport class ReturnProductComponent implements OnInit {\n\n\n    productArray\n    conditionsList;\n    statusList;\n    statusList1\n    inventoryId;\n    addProductObj: any;\n    facilitiesList: any;\n\n    constructor(\n        public _qrScanner: QRCodeScanner,\n        public _appService: AppService,\n        public _router: Router,\n        public dialog: MatDialog,\n        private readonly fb: FormBuilder\n    ) {\n        this.facility = JSON.parse(localStorage.getItem('facility'));\n        this._appService.currentMessage.subscribe(message => {\n            for (const i of message) {\n                this.productArray = i;\n                for (let itm of this.productArray) {\n                    itm.inventoryItem.facilityId.facility = this.facility.facility\n                }\n                this.getAllProductConditionList();\n                this.getAllProductStatusList();\n                this.getFacilitiesList()\n            }\n        })\n    }\n    returnFacility: any; facility: any;\n    reason;\n    ngOnInit() {\n        this.returnFacility = '';\n        this.statusObj.itemStatus = ''\n        /**\n    * Back Button event trigger\n    */\n        history.pushState(null, null, location.href);\n        window.onpopstate = (event) => {\n            history.go(1);\n        };\n        this.reason = localStorage.getItem(\"reason\")\n        if (this.reason == null || this.reason == '') {\n            this.reason = 20\n        } else {\n            this.reason = localStorage.getItem(\"reason\")\n        }\n    }\n\n    onChange(i, j) {\n        if (this.productArray[i].checklist[j].accessoryCondition) {\n            this.productArray[i].checklist[j].quantity = 1\n        } else {\n            this.productArray[i].checklist[j].quantity = 0\n        }\n    }\n\n    getAllProductConditionList() {\n        this._appService.getProductConditionList().subscribe(data => {\n            const condRes: any = data;\n            if (condRes.data != null) {\n                this.conditionsList = condRes.data;\n                for (const i of this.productArray) {\n                    const condObj: any = this.conditionsList.find(status => 1 === status.id)\n                    i.inventoryItem.inventoryConditionId.id = condObj.id;\n                    if (i.inventoryItem.inventoryConditionId.id) {\n                        this._appService.getStatusByInventoryCondition(i.inventoryItem.inventoryConditionId.id).subscribe((data) => {\n                            const condRes: any = data;\n                            this.statusList = condRes.data;\n                        })\n                    }\n                }\n            }\n        })\n    }\n    statusObj: any = {\n        'itemStatus': ''\n    };\n    getAllProductStatusList() {\n        this._appService.getAllProductStatusTypes().subscribe(data => {\n            const statusRes: any = data;\n            if (statusRes.data != null) {\n                this.statusList = statusRes.data;\n                for (const i of this.productArray) {\n                    this.statusObj = this.statusList.find(status => 5 === status.id)\n                    i.inventoryItem.itemStatusId.id = this.statusObj.id\n                }\n            }\n        })\n    }\n\n    getFacilitiesList() {\n        this._appService.getFacilities().subscribe((data) => {\n            const facilityRes: any = data;\n            if (facilityRes.data != null) {\n                this.facilitiesList = facilityRes.data;\n            }\n        })\n    }\n\n    getStatusList(value) {\n        if (value.inventoryConditionId.id == 1) {\n            this._appService.getStatusByInventoryCondition(value.inventoryConditionId.id).subscribe((data) => {\n                const condRes: any = data;\n                this.statusList = condRes.data;\n            })\n            value.itemStatusId.id = ''\n        }\n        else {\n            this._appService.getStatusByInventoryCondition(value.inventoryConditionId.id).subscribe((data) => {\n                const condRes: any = data\n                this.statusList1 = condRes.data;\n            })\n            value.itemStatusId.id = ''\n        }\n    }\n\n    checklistPostObj: any = {\n        array: []\n    }\n    formValid = false\n    buttonStatus = false\n    loaderBtn = false;\n    addToInventoryAfterFacilityCheck() {\n        if (this.facility.id === this.productArray[0].facility.id) {\n            this.addToInventory();\n        } else {\n            this.facilityCheck(\"Are you sure to return product to different Facility\")\n        }\n    }\n    addToInventory() {\n        this.buttonStatus = true\n        const postObj: any = [\n        ]\n        const data: any = []\n        for (let i = 0; i < this.productArray.length; i++) {\n            //this.productArray[i].inventoryItem.comments=this.productArray[i].comments\n            this.productArray[i].inventoryItem.createdUser = localStorage.getItem('userName');\n            for (let facility of this.facilitiesList) {\n                if (this.productArray[i].inventoryItem.facilityId.id == facility.id) {\n                    this.productArray[i].inventoryItem.facilityId = {\n                        id: this.facility.id, facility: this.facility.facility, facilityName: this.facility.facilityName\n                    };\n                } else if (this.productArray[i].inventoryItem.facilityId.id == '') {\n                    this.formValid = false\n                    break\n                }\n\n            }\n\n            postObj.push(\n                this.productArray[i].inventoryItem\n            )\n\n            if (this.productArray[i].inventoryItem.facilityId.id == '') {\n                this.formValid = false\n                break\n            }\n            else {\n                this.formValid = true\n            }\n\n            if (this.productArray[i].inventoryItem.itemStatusId.id == '') {\n                this.formValid = false\n                break\n            }\n            else {\n                this.formValid = true\n            }\n\n            if (this.productArray[i].checklist.length > 0) {\n                const checklist: any = { checkListArray: [] }\n                for (let j = 0; j < this.productArray[i].checklist.length; j++) {\n                    checklist.checkListArray.push({\n                        \"accessoriesId\": this.productArray[i].checklist[j].accessoriesId.id,\n                        \"accessoryCondition\": this.productArray[i].checklist[j].accessoryCondition,\n                        \"quantity\": this.productArray[i].checklist[j].accessoryCondition ? this.productArray[i].checklist[j].quantity : 0\n                    })\n                    checklist.inventoryItemId = {\n                        id: this.productArray[i].inventoryItem.id\n                    }\n                }\n                data.push(checklist)\n            }\n        }\n        this.checklistPostObj.array = data;\n        if (this.formValid) {\n            this.loaderBtn = true;\n            this._appService.addReturnItemToInventory(postObj, this.reason).subscribe((data: any) => {\n                const resReslt: any = data;\n                if (Number(this.reason) == 10) {\n                    const id = localStorage.getItem(\"demoId\");\n                    const ob = {\n                        \"comments\": localStorage.getItem(\"comments\")\n                    }\n                    this._appService.addCommentsForReturn(ob, id).subscribe(data1 => {\n                    })\n                }\n                if (resReslt.data != null) {\n                    localStorage.setItem('removeNothanks', \"ok\")\n                    if (this.checklistPostObj.array.length > 0) {\n                        this._appService.updateChecklist(this.checklistPostObj).subscribe((data: any) => {\n                            if (data.data != null) {\n                                this.loaderBtn = false;\n                                this.openDialog('Product & Checklist Successfully Added to Inventory ')\n                            } else {\n                                this.loaderBtn = false;\n                                this.openDialog(data.error.message)\n                            }\n                        })\n                    }\n                    else {\n                        this.loaderBtn = false;\n                        this.openDialog('Product Successfully Added to Inventory')\n                    }\n                } else {\n                    this.loaderBtn = false;\n                    this.openDialog(data.error.message);\n                }\n            })\n        }\n    }\n\n    expand(i) {\n        if (this.productArray[i].condition) {\n            this.productArray[i].condition = false;\n        } else {\n            this.productArray[i].condition = true;\n        }\n    }\n\n    navigatetoHomePage() {\n        this._router.navigate(['./inventory'])\n    }\n    openDialog(text) {\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', text)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.navigatetoHomePage()\n            }\n        });\n    }\n    facilityCheck(text) {\n        localStorage.setItem('facilityCheck', \"facility\");\n        localStorage.setItem('removeNothanks',\"no\")\n        const dialogRef = this.dialog.open(DialogComponent, { disableClose: true });\n        localStorage.setItem('msg', text)\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.addToInventory();\n            } else {\n                this.navigatetoHomePage()\n            }\n        });\n    }\n}\n\n\n\n\n@Component({\n    selector: 'dialog-content-example-dialog',\n    template: `<img class=\"mat-typography img1\" src=\"assets/img/logom.png\" alt=\"MedicalBulkBuy\" width=\"90%\"   >\n    <mat-dialog-content class=\"mat-typography\" style=\"border-bottom:1px solid #ddd;border-top:1px solid #ddd; text-align:center\">\n     \n    <h5 style=\"padding: 18px;margin: 0px;font-size: 14px;font-family: sans-serif;\">{{msgText}}</h5>\n    </mat-dialog-content>\n   \n    <mat-dialog-actions align=\"center\" >\n    <span *ngIf='fac===\"facility\"'>\n    <button mat-stroked-button *ngIf='hideButton!==\"ok\"' [mat-dialog-close]=\"false\">No Thanks</button>&nbsp;\n    </span><button mat-stroked-button [mat-dialog-close]=\"true\" cdkFocusInitial > \n    <mat-icon>done</mat-icon>\n    Ok\n</button>\n    </mat-dialog-actions>\n  `,\n})\n\nexport class DialogComponent {\n    constructor(public _router: Router) {\n\n    }\n    msgText: any; fac: any; hideButton;\n    ngOnInit() {\n        this.fac = localStorage.getItem('facilityCheck');\n        this.msgText = localStorage.getItem('msg');\n        this.hideButton = localStorage.getItem('removeNothanks')\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ReturnProductComponent, DialogComponent } from './return.component';\n\n\nimport {\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatIconModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ReturnProductComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatIconModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        CommonModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatDialogModule,\n        [RouterModule.forChild(routes)],\n        FormsModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' })\n    ],\n    declarations: [ReturnProductComponent, DialogComponent],\n    providers: [\n\n    ]\n    , entryComponents: [DialogComponent]\n})\nexport class ReturnProductModule { }\n"],"sourceRoot":""}