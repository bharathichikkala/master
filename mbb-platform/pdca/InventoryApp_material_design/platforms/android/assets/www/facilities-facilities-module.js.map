{"version":3,"sources":["webpack:///./src/app/facilities/facilities.component.html","webpack:///./src/app/facilities/facilities.component.ts","webpack:///./src/app/facilities/facilities.module.ts"],"names":[],"mappings":"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","file":"facilities-facilities-module.js","sourcesContent":["module.exports = \"<div class=\\\"main-content\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-8\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header card-header-info\\\">\\n                        <h4 class=\\\"card-title\\\" style=\\\"text-align:center\\\">Change Facility</h4>\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <form>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-12 col-12\\\">\\n                                    <mat-form-field>\\n                                        <label>Select Facility</label>\\n                                        <mat-select matInput [(ngModel)]=\\\"value\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n                                            required>\\n                                            <mat-option *ngFor=\\\"let a of facilities\\\" [value]=\\\"a.id\\\">{{a.facility}}\\n                                            </mat-option>\\n                                        </mat-select>\\n                                    </mat-form-field>\\n                                </div>\\n                            </div>\\n                            <span style=\\\"color:green;text-align:center\\\">{{facilitySuccess}}</span><br>\\n                            <button type=\\\"submit\\\" (click)=\\\"home()\\\" class=\\\"btn btn-primary\\\">\\n                                Change\\n                            </button>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { MatDialog } from '@angular/material';\nimport { FormsModule, FormBuilder, FormGroup, Validators, FormControl, AbstractControl, FormArray } from '@angular/forms';\n@Component({\n    selector: 'dialog-content-example-dialog',\n    templateUrl: './facilities.component.html'\n})\n\nexport class FacilityComponent {\n    msgText: any;\n    value;\n    facilities: any = [];\n    form: FormGroup\n    userType;\n    constructor(private router: Router) { }\n    ngOnInit() {\n        this.value = JSON.parse(localStorage.getItem('facility')).id\n        this.userType = localStorage.getItem('userRole')\n        const a = JSON.parse(localStorage.getItem('facilities'));\n        this.facilities = a\n        this.msgText = localStorage.getItem('msg');\n        this.form = new FormGroup({\n            facility: new FormControl(null)\n        })\n    }\n    submitted = false;facilitySuccess;\n    home() {\n        this.facilities = JSON.parse(localStorage.getItem('facilities'));\n        let ob;\n        for (let i = 0; i < this.facilities.length; i++) {\n            if (this.facilities[i].id == this.value) {\n                ob = this.facilities[i];\n            }\n        }\n        localStorage.setItem('facility', JSON.stringify(ob));\n        if (this.userType == 'DISPATCHER') {\n            this.facilitySuccess = 'Facility Changed Successfully';\n            setTimeout(() => {\n                this.facilitySuccess = '';\n                this.router.navigate(['/dispatch/home'])\n            }, 2000);\n        }\n        else {\n            this.facilitySuccess = 'Facility Changed Successfully';\n            setTimeout(() => {\n                this.facilitySuccess = '';\n                this.router.navigate(['/inventory/view'])\n            }, 2000);\n        }\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { LoginComponent, DialogComponent } from './login.component';\nimport { FacilityComponent } from './facilities.component'\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport {\n    MatButtonModule,\n    MatInputModule,\n    MatRippleModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n    MatDialogModule\n} from '@angular/material';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FacilityComponent\n    }\n]\n\n\n@NgModule({\n    imports: [\n        MatButtonModule,\n        MatRippleModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule,\n        MatCardModule,\n        MatIconModule,\n        CommonModule,\n        [RouterModule.forChild(routes)],\n        FormsModule,\n        ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    ],\n    declarations: [FacilityComponent],\n    providers: [\n\n    ],\n    entryComponents: [FacilityComponent]\n})\nexport class FacilityModule { }\n"],"sourceRoot":""}